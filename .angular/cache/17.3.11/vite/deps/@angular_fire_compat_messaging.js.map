{
  "version": 3,
  "sources": ["../../../../../node_modules/@angular/fire/fesm2022/angular-fire-compat-messaging.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/fire';\nimport { VERSION } from '@angular/fire';\nimport { ɵfirebaseAppFactory, ɵcacheInstance, ɵlazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵapplyMixins } from '@angular/fire/compat';\nimport { isSupported } from 'firebase/messaging';\nimport { EMPTY, of, Observable, concat } from 'rxjs';\nimport { subscribeOn, observeOn, switchMap, map, shareReplay, switchMapTo, catchError, mergeMap, defaultIfEmpty } from 'rxjs/operators';\nimport firebase from 'firebase/compat/app';\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\n// Export a null object with the same keys as firebase/compat/messaging, so Proxy can work with proxy-polyfill in Internet Explorer\nconst proxyPolyfillCompat = {\n  deleteToken: null,\n  getToken: null,\n  onMessage: null,\n  onBackgroundMessage: null\n};\nconst VAPID_KEY = new InjectionToken('angularfire2.messaging.vapid-key');\nconst SERVICE_WORKER = new InjectionToken('angularfire2.messaging.service-worker-registeration');\nclass AngularFireMessaging {\n  requestPermission;\n  getToken;\n  tokenChanges;\n  messages;\n  requestToken;\n  deleteToken;\n  constructor(options, name,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  platformId, zone, schedulers, vapidKey, _serviceWorker) {\n    const serviceWorker = _serviceWorker;\n    const messaging = of(undefined).pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMap(isSupported), switchMap(supported => supported ? import('firebase/compat/messaging') : EMPTY), map(() => ɵfirebaseAppFactory(options, zone, name)), switchMap(app => ɵcacheInstance(`${app.name}.messaging`, 'AngularFireMessaging', app.name, () => {\n      return of(app.messaging());\n    }, [])), shareReplay({\n      bufferSize: 1,\n      refCount: false\n    }));\n    this.requestPermission = messaging.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMap(() => Notification.requestPermission()));\n    this.getToken = messaging.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMap(async messaging => {\n      if (Notification.permission === 'granted') {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        const serviceWorkerRegistration = serviceWorker ? await serviceWorker : null;\n        return await messaging.getToken({\n          vapidKey,\n          serviceWorkerRegistration\n        });\n      } else {\n        return null;\n      }\n    }));\n    const notificationPermission$ = new Observable(emitter => {\n      navigator.permissions.query({\n        name: 'notifications'\n      }).then(notificationPerm => {\n        notificationPerm.onchange = () => emitter.next();\n      });\n    });\n    const tokenChange$ = messaging.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMapTo(notificationPermission$), switchMapTo(this.getToken));\n    this.tokenChanges = messaging.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMap(() => concat(this.getToken, tokenChange$)));\n    this.messages = messaging.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMap(messaging => new Observable(emitter => messaging.onMessage(emitter))));\n    this.requestToken = messaging.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMap(() => this.requestPermission), catchError(() => of(null)), mergeMap(() => this.tokenChanges));\n    this.deleteToken = () => messaging.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular), switchMap(messaging => messaging.deleteToken()), defaultIfEmpty(false));\n    return ɵlazySDKProxy(this, messaging, zone);\n  }\n  static ɵfac = function AngularFireMessaging_Factory(t) {\n    return new (t || AngularFireMessaging)(i0.ɵɵinject(FIREBASE_OPTIONS), i0.ɵɵinject(FIREBASE_APP_NAME, 8), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ɵAngularFireSchedulers), i0.ɵɵinject(VAPID_KEY, 8), i0.ɵɵinject(SERVICE_WORKER, 8));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AngularFireMessaging,\n    factory: AngularFireMessaging.ɵfac,\n    providedIn: 'any'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireMessaging, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [FIREBASE_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [FIREBASE_APP_NAME]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1.ɵAngularFireSchedulers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [VAPID_KEY]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [SERVICE_WORKER]\n    }]\n  }], null);\n})();\nɵapplyMixins(AngularFireMessaging, [proxyPolyfillCompat]);\nclass AngularFireMessagingModule {\n  constructor() {\n    firebase.registerVersion('angularfire', VERSION.full, 'fcm-compat');\n  }\n  static ɵfac = function AngularFireMessagingModule_Factory(t) {\n    return new (t || AngularFireMessagingModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AngularFireMessagingModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [AngularFireMessaging]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireMessagingModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFireMessaging]\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireMessaging, AngularFireMessagingModule, SERVICE_WORKER, VAPID_KEY };\n"],
  "mappings": "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",
  "names": ["messaging"]
}
