{
  "version": 3,
  "sources": ["../../../../../node_modules/@amcharts/amcharts4/.internal/plugins/forceDirected/ForceDirectedLink.js", "../../../../../node_modules/@amcharts/amcharts4/.internal/core/elements/Grip.js", "../../../../../node_modules/@amcharts/amcharts4/.internal/charts/Chart.js", "../../../../../node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js", "../../../../../node_modules/@amcharts/amcharts4/.internal/charts/Legend.js", "../../../../../node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js", "../../../../../node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js", "../../../../../node_modules/@amcharts/amcharts4/.internal/plugins/forceDirected/ForceDirectedNode.js", "../../../../../node_modules/d3-quadtree/src/add.js", "../../../../../node_modules/d3-quadtree/src/cover.js", "../../../../../node_modules/d3-quadtree/src/data.js", "../../../../../node_modules/d3-quadtree/src/extent.js", "../../../../../node_modules/d3-quadtree/src/quad.js", "../../../../../node_modules/d3-quadtree/src/find.js", "../../../../../node_modules/d3-quadtree/src/remove.js", "../../../../../node_modules/d3-quadtree/src/root.js", "../../../../../node_modules/d3-quadtree/src/size.js", "../../../../../node_modules/d3-quadtree/src/visit.js", "../../../../../node_modules/d3-quadtree/src/visitAfter.js", "../../../../../node_modules/d3-quadtree/src/x.js", "../../../../../node_modules/d3-quadtree/src/y.js", "../../../../../node_modules/d3-quadtree/src/quadtree.js", "../../../../../node_modules/d3-force/src/constant.js", "../../../../../node_modules/d3-force/src/jiggle.js", "../../../../../node_modules/d3-force/src/collide.js", "../../../../../node_modules/d3-force/src/link.js", "../../../../../node_modules/d3-dispatch/src/dispatch.js", "../../../../../node_modules/d3-timer/src/timer.js", "../../../../../node_modules/d3-force/src/lcg.js", "../../../../../node_modules/d3-force/src/simulation.js", "../../../../../node_modules/d3-force/src/manyBody.js", "../../../../../node_modules/d3-force/src/x.js", "../../../../../node_modules/d3-force/src/y.js", "../../../../../node_modules/@amcharts/amcharts4/.internal/plugins/forceDirected/ForceDirectedSeries.js", "../../../../../node_modules/@amcharts/amcharts4/.internal/plugins/forceDirected/ForceDirectedTree.js"],
  "sourcesContent": ["/**\r\n * ForceDirectedLink module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A class that builds links between [[ForceDirectedNode]] elements.\r\n *\r\n * @see {@link IForceDirectedLinkEvents} for a list of available events\r\n * @see {@link IForceDirectedLinkAdapters} for a list of available Adapters\r\n * @since 4.3.8\r\n * @important\r\n */\r\nvar ForceDirectedLink = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedLink, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedLink() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ForceDirectedLink\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.fillOpacity = 0;\r\n        _this.strokeOpacity = 0.5;\r\n        _this.stroke = interfaceColors.getFor(\"grid\");\r\n        _this.isMeasured = false;\r\n        _this.nonScalingStroke = true;\r\n        _this.interactionsEnabled = false;\r\n        _this.distance = 1.5;\r\n        _this.strength = 1;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Validates element:\r\n     * * Triggers events\r\n     * * Redraws the element\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ForceDirectedLink.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        var source = this.source;\r\n        var target = this.target;\r\n        if (source && target) {\r\n            this.path = $path.moveTo({ x: source.pixelX, y: source.pixelY }) + $path.lineTo({ x: target.pixelX, y: target.pixelY });\r\n            if (source.isHidden || target.isHidden || source.isHiding || target.isHiding) {\r\n                this.hide();\r\n            }\r\n            else {\r\n                this.show();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ForceDirectedLink.prototype, \"source\", {\r\n        /**\r\n         * @return Source node\r\n         */\r\n        get: function () {\r\n            return this._source;\r\n        },\r\n        /**\r\n         * Source node - a node link starts from.\r\n         *\r\n         * @param  value  Source node\r\n         */\r\n        set: function (value) {\r\n            if (value) {\r\n                this._source = value;\r\n                this._disposers.push(value.events.on(\"positionchanged\", this.invalidate, this, false));\r\n                this._disposers.push(value.events.on(\"validated\", this.invalidate, this, false));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedLink.prototype, \"target\", {\r\n        /**\r\n         * @return Target node\r\n         */\r\n        get: function () {\r\n            return this._target;\r\n        },\r\n        /**\r\n         * Target node - a node link ends at.\r\n         *\r\n         * @param  value  Target node\r\n         */\r\n        set: function (value) {\r\n            if (value) {\r\n                this._target = value;\r\n                this._disposers.push(value.events.on(\"positionchanged\", this.invalidate, this, false));\r\n                this._disposers.push(value.events.on(\"validated\", this.invalidate, this, false));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedLink.prototype, \"distance\", {\r\n        /**\r\n         * @return Distance\r\n         */\r\n        get: function () {\r\n            if (this._adapterO) {\r\n                if (this._adapterO.isEnabled(\"distance\")) {\r\n                    return this._adapterO.apply(\"distance\", this.properties.distance);\r\n                }\r\n            }\r\n            return this.properties.distance;\r\n        },\r\n        /**\r\n         * Distance between centers of source and target nodes.\r\n         *\r\n         * This is relative to the radii to sum of both source and target nodes.\r\n         *\r\n         * E.g. if this would be set to `1` both nodes would be touching each other.\r\n         *\r\n         * @default 1.5\r\n         * @param  value  Distance\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"distance\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedLink.prototype, \"strength\", {\r\n        /**\r\n         * @return Strength\r\n         */\r\n        get: function () {\r\n            if (this._adapterO) {\r\n                if (this._adapterO.isEnabled(\"strength\")) {\r\n                    return this._adapterO.apply(\"strength\", this.properties.strength);\r\n                }\r\n            }\r\n            return this.properties.strength;\r\n        },\r\n        /**\r\n         * Relative \"strength\" of the traction between linked nodes.\r\n         *\r\n         * Available values: 0 to XX.\r\n         *\r\n         * The bigger the number, the more rigid the link and the less it will\r\n         * stretch when node is dragged.\r\n         *\r\n         * Carefully with very big numbers: nodes and links might start behaving\r\n         * quite \"nerviously\".\r\n         *\r\n         * @default 1\r\n         * @param  value  Strength\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"strength\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * X coordinate for the slice tooltip.\r\n     *\r\n     * @ignore\r\n     * @return X\r\n     */\r\n    ForceDirectedLink.prototype.getTooltipX = function () {\r\n        var x = this.getPropertyValue(\"tooltipX\");\r\n        if (!(x instanceof Percent)) {\r\n            x = percent(50);\r\n        }\r\n        if (x instanceof Percent) {\r\n            var source = this.source;\r\n            var target = this.target;\r\n            if (source && target) {\r\n                var x1 = source.pixelX;\r\n                var x2 = target.pixelX;\r\n                return x1 + (x2 - x1) * x.value;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    /**\r\n     * Y coordinate for the slice tooltip.\r\n     *\r\n     * @ignore\r\n     * @return Y\r\n     */\r\n    ForceDirectedLink.prototype.getTooltipY = function () {\r\n        var y = this.getPropertyValue(\"tooltipY\");\r\n        if (!(y instanceof Percent)) {\r\n            y = percent(50);\r\n        }\r\n        if (y instanceof Percent) {\r\n            var source = this.source;\r\n            var target = this.target;\r\n            if (source && target) {\r\n                var y1 = source.pixelY;\r\n                var y2 = target.pixelY;\r\n                return y1 + (y2 - y1) * y.value;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    return ForceDirectedLink;\r\n}(Sprite));\r\nexport { ForceDirectedLink };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedLink\"] = ForceDirectedLink;\r\n", "/**\r\n * Grip module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\nimport { percent } from \"../utils/Percent\";\r\nimport * as $path from \"../rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a grip element that can be used for scrolling or other things.\r\n *\r\n * @see {@link IGripEvents} for a list of available events\r\n * @see {@link IGripAdapters} for a list of available Adapters\r\n * @since 4.4.0\r\n */\r\nvar Grip = /** @class */ (function (_super) {\r\n    __extends(Grip, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Grip() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"Grip\";\r\n        var cs = new InterfaceColorSet();\r\n        // Set defaults\r\n        _this.layout = \"absolute\";\r\n        _this.padding(10, 10, 10, 10);\r\n        _this.margin(3, 3, 3, 3);\r\n        _this.background.fillOpacity = 0.3;\r\n        _this.background.cornerRadius(10, 10, 10, 10);\r\n        // Create an icon\r\n        var icon = new Sprite();\r\n        icon.element = _this.paper.add(\"path\");\r\n        var path = $path.moveTo({ x: -6, y: 0 });\r\n        path += $path.lineTo({ x: 6, y: 0 });\r\n        path += $path.moveTo({ x: -8, y: -6 });\r\n        path += $path.lineTo({ x: 0, y: -12 });\r\n        path += $path.lineTo({ x: 8, y: -6 });\r\n        path += $path.moveTo({ x: -8, y: 6 });\r\n        path += $path.lineTo({ x: 0, y: 12 });\r\n        path += $path.lineTo({ x: 8, y: 6 });\r\n        icon.path = path;\r\n        icon.strokeWidth = 2;\r\n        icon.fillOpacity = 0;\r\n        icon.pixelPerfect = true;\r\n        icon.padding(0, 4, 0, 4);\r\n        icon.stroke = cs.getFor(\"text\");\r\n        icon.strokeOpacity = 0.7;\r\n        icon.align = \"center\";\r\n        icon.valign = \"middle\";\r\n        _this.icon = icon;\r\n        _this.label.dispose();\r\n        _this.label = undefined;\r\n        // Set default position\r\n        _this.position = \"right\";\r\n        // Set up autohide\r\n        _this.autoHideDelay = 3000;\r\n        _this.events.on(\"shown\", function (ev) {\r\n            if (_this._autoHideTimeout) {\r\n                _this._autoHideTimeout.dispose();\r\n            }\r\n            if (_this.autoHideDelay) {\r\n                _this._autoHideTimeout = _this.setTimeout(function () {\r\n                    _this.hide();\r\n                }, _this.autoHideDelay);\r\n            }\r\n        });\r\n        _this.events.on(\"down\", function (ev) {\r\n            if (_this._autoHideTimeout) {\r\n                _this._autoHideTimeout.dispose();\r\n            }\r\n        });\r\n        _this.events.on(\"out\", function (ev) {\r\n            if (_this.autoHideDelay) {\r\n                _this._autoHideTimeout = _this.setTimeout(function () {\r\n                    _this.hide();\r\n                }, _this.autoHideDelay);\r\n            }\r\n        });\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Grip.prototype, \"position\", {\r\n        /**\r\n         * @return Position\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"position\");\r\n        },\r\n        /**\r\n         * Sets position of the grip.\r\n         *\r\n         * Available options: \"left\", \"right\" (default), \"top\", \"bottom\".\r\n         *\r\n         * @param  value  Position\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"position\", value)) {\r\n                switch (value) {\r\n                    case \"left\":\r\n                        this.align = \"left\";\r\n                        this.valign = \"middle\";\r\n                        this.horizontalCenter = \"left\";\r\n                        this.verticalCenter = \"middle\";\r\n                        this.icon.rotation = 0;\r\n                        this.width = undefined;\r\n                        this.height = percent(30);\r\n                        break;\r\n                    case \"right\":\r\n                        this.align = \"right\";\r\n                        this.valign = \"middle\";\r\n                        this.horizontalCenter = \"right\";\r\n                        this.verticalCenter = \"middle\";\r\n                        this.icon.rotation = 0;\r\n                        this.width = undefined;\r\n                        this.height = percent(30);\r\n                        break;\r\n                    case \"top\":\r\n                        this.align = \"center\";\r\n                        this.valign = \"top\";\r\n                        this.horizontalCenter = \"middle\";\r\n                        this.verticalCenter = \"top\";\r\n                        this.icon.rotation = 90;\r\n                        this.width = percent(30);\r\n                        this.height = undefined;\r\n                        break;\r\n                    case \"bottom\":\r\n                        this.align = \"center\";\r\n                        this.valign = \"bottom\";\r\n                        this.horizontalCenter = \"middle\";\r\n                        this.verticalCenter = \"bottom\";\r\n                        this.icon.rotation = 90;\r\n                        this.width = percent(30);\r\n                        this.height = undefined;\r\n                        break;\r\n                    default:\r\n                        this.align = \"center\";\r\n                        this.valign = \"middle\";\r\n                        this.horizontalCenter = \"middle\";\r\n                        this.verticalCenter = \"middle\";\r\n                        this.icon.rotation = 90;\r\n                        this.width = percent(30);\r\n                        this.height = undefined;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Grip.prototype, \"autoHideDelay\", {\r\n        /**\r\n         * @return Delay\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"autoHideDelay\");\r\n        },\r\n        /**\r\n         * Number of milliseconds to show grip until it is hidden automatically.\r\n         *\r\n         * @default 3000\r\n         * @param  value  Delay\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"autoHideDelay\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Grip;\r\n}(Button));\r\nexport { Grip };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grip\"] = Grip;\r\n", "/**\r\n * [[Chart]] class provides base functionality for all chart types to inherit.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { registry } from \"../core/Registry\";\r\nimport { Component } from \"../core/Component\";\r\nimport { MutableValueDisposer, Disposer } from \"../core/utils/Disposer\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Grip } from \"../core/elements/Grip\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport * as $iter from \"../core/utils/Iterator\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Chart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ChartDataItem = /** @class */ (function (_super) {\r\n    __extends(ChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ChartDataItem;\r\n}(DataItem));\r\nexport { ChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all Charts.\r\n *\r\n * @see {@link IChartEvents} for a list of available Events\r\n * @see {@link IChartAdapters} for a list of available Adapters\r\n */\r\nvar Chart = /** @class */ (function (_super) {\r\n    __extends(Chart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Chart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A reference to chart's [[Legend]].\r\n         * @ignore\r\n         */\r\n        _this._legend = new MutableValueDisposer();\r\n        if (_this.constructor === Chart) {\r\n            throw new Error(\"'Chart' cannot be instantiated directly. Please use a specific chart type.\");\r\n        }\r\n        _this.className = \"Chart\";\r\n        // Create a list of titles\r\n        var template = new Label();\r\n        _this.titles = new ListTemplate(template);\r\n        _this._disposers.push(new ListDisposer(_this.titles));\r\n        _this._disposers.push(template);\r\n        // Chart component is also a container. it holds _chartAndLegendCont and titles\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.layout = \"vertical\";\r\n        // Chart and legend\r\n        var chartAndLegendContainer = _this.createChild(Container);\r\n        chartAndLegendContainer.shouldClone = false;\r\n        chartAndLegendContainer.layout = \"vertical\";\r\n        chartAndLegendContainer.width = percent(100);\r\n        chartAndLegendContainer.height = percent(100);\r\n        _this.chartAndLegendContainer = chartAndLegendContainer;\r\n        // Chart container holds all the elements of a chart, extept titles and legend\r\n        var chartContainer = chartAndLegendContainer.createChild(Container);\r\n        chartContainer.shouldClone = false;\r\n        chartContainer.width = percent(100);\r\n        chartContainer.height = percent(100);\r\n        _this.chartContainer = chartContainer;\r\n        _this.showOnInit = true;\r\n        _this._disposers.push(_this._legend);\r\n        // Add title list events to apply certain formatting options and to make\r\n        // the chart reference them as accessible screen reader labels\r\n        _this.titles.events.on(\"inserted\", function (label) {\r\n            _this.processTitle(label);\r\n            _this.updateReaderTitleReferences();\r\n        }, _this, false);\r\n        _this.titles.events.on(\"removed\", function (label) {\r\n            _this.updateReaderTitleReferences();\r\n        }, _this, false);\r\n        // Accessibility\r\n        // It seems we can't set focusable on the whole chart because it seems to\r\n        // mess up the whole focus event system - getting a focus on an inside\r\n        // object also trigger focus on parent\r\n        //this.focusable = true;\r\n        _this.role = \"region\";\r\n        _this.defaultState.transitionDuration = 1;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    Chart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Chart\");\r\n        }\r\n    };\r\n    /**\r\n     * Initiates drawing of the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Chart.prototype.draw = function () {\r\n        this.fixLayout();\r\n        _super.prototype.draw.call(this);\r\n    };\r\n    /**\r\n     * Updates legend's hierarchy based on the position.\r\n     */\r\n    Chart.prototype.fixLayout = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var chartAndLegendContainer = this.chartAndLegendContainer;\r\n            var chartContainer = this.chartContainer;\r\n            chartContainer.x = undefined;\r\n            chartContainer.y = undefined;\r\n            if (legend.position != \"absolute\") {\r\n                legend.x = undefined;\r\n                legend.y = undefined;\r\n            }\r\n            switch (legend.position) {\r\n                case \"left\":\r\n                    chartAndLegendContainer.layout = \"horizontal\";\r\n                    legend.toBack();\r\n                    break;\r\n                case \"right\":\r\n                    chartAndLegendContainer.layout = \"horizontal\";\r\n                    legend.toFront();\r\n                    break;\r\n                case \"top\":\r\n                    chartAndLegendContainer.layout = \"vertical\";\r\n                    legend.toBack();\r\n                    break;\r\n                case \"bottom\":\r\n                    chartAndLegendContainer.layout = \"vertical\";\r\n                    legend.toFront();\r\n                    break;\r\n                case \"absolute\":\r\n                    legend.isMeasured = false;\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     */\r\n    Chart.prototype.feedLegend = function () {\r\n        // Nothing here. This method is provided only as a \"placeholder\" for\r\n        // extending classes to override\r\n    };\r\n    /**\r\n     * Adds a new title to the chart when it is inserted into chart's titles\r\n     * list.\r\n     * @param event  An event object which is triggered when inserting into titles list\r\n     * @return Label object\r\n     */\r\n    Chart.prototype.processTitle = function (event) {\r\n        var title = event.newValue;\r\n        title.parent = this;\r\n        title.toBack();\r\n        title.shouldClone = false;\r\n        title.align = \"center\";\r\n        // Need to explicitly apply the `id` attribute so it can be referenced by\r\n        // `aria-labelledby`\r\n        title.uidAttr();\r\n        return title;\r\n    };\r\n    /**\r\n     * Checks if chart has any title elements. If it does, we will use them in an\r\n     * `aria-labelledby` attribute so that screen readers can use them to properly\r\n     * describe the chart when it is focused or hovered.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Chart.prototype.updateReaderTitleReferences = function () {\r\n        if (this.titles.length) {\r\n            var titleIds_1 = [];\r\n            $iter.each(this.titles.iterator(), function (title) {\r\n                titleIds_1.push(title.uid);\r\n            });\r\n            this.setSVGAttribute({ \"aria-labelledby\": titleIds_1.join(\" \") });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"aria-labelledby\");\r\n        }\r\n    };\r\n    Object.defineProperty(Chart.prototype, \"legend\", {\r\n        /**\r\n         * @return Legend\r\n         */\r\n        get: function () {\r\n            return this._legend.get();\r\n        },\r\n        /**\r\n         * Holds the instance of chart's [[Leged]].\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends\r\n         * @param Legend\r\n         */\r\n        set: function (legend) {\r\n            this.setLegend(legend);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Prepares the legend instance for use in this chart.\r\n     *\r\n     * @param legend  Legend\r\n     */\r\n    Chart.prototype.setLegend = function (legend) {\r\n        var _this = this;\r\n        if (this._legend.get() !== legend) {\r\n            if (legend) {\r\n                // Set legend options\r\n                legend.parent = this.chartAndLegendContainer;\r\n                this._legend.set(legend, legend.events.on(\"propertychanged\", function (event) {\r\n                    if (event.property == \"position\") {\r\n                        _this.fixLayout();\r\n                    }\r\n                }, undefined, false));\r\n                legend.addDisposer(new Disposer(function () {\r\n                    _this.legend = undefined;\r\n                }));\r\n            }\r\n            else {\r\n                this._legend.reset();\r\n            }\r\n            this.feedLegend();\r\n        }\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    Chart.prototype.dispose = function () {\r\n        // otherwise there might be some errors when disposing chart which was just inited\r\n        if (this.legend) {\r\n            this.legend.dispose();\r\n        }\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Chart.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up legend\r\n            if ($type.hasValue(config.legend) && !$type.hasValue(config.legend.type)) {\r\n                config.legend.type = \"Legend\";\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[Series]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    Chart.prototype.copyFrom = function (source) {\r\n        this.titles.copyFrom(source.titles);\r\n        this.chartContainer.copyFrom(source.chartContainer);\r\n        if (source.legend) {\r\n            this.legend = source.legend.clone();\r\n            this.legend.removeChildren();\r\n        }\r\n        _super.prototype.copyFrom.call(this, source);\r\n    };\r\n    Object.defineProperty(Chart.prototype, \"dragGrip\", {\r\n        /**\r\n         * @return Grip\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._dragGrip) {\r\n                var grip_1 = this.tooltipContainer.createChild(Grip);\r\n                grip_1.align = \"right\";\r\n                grip_1.valign = \"middle\";\r\n                grip_1.hide(0);\r\n                grip_1.events.on(\"down\", function (ev) {\r\n                    if (ev.touch) {\r\n                        _this.interactionsEnabled = false;\r\n                    }\r\n                });\r\n                grip_1.events.on(\"up\", function (ev) {\r\n                    _this.interactionsEnabled = true;\r\n                });\r\n                this.events.on(\"down\", function (ev) {\r\n                    if (ev.touch) {\r\n                        grip_1.show();\r\n                    }\r\n                });\r\n                this._dragGrip = grip_1;\r\n            }\r\n            return this._dragGrip;\r\n        },\r\n        /**\r\n         * An instance of [[Grip]] which serves as a grip point which appears on\r\n         * touch and allows scrolling whole page even if chart is occupying the\r\n         * whole of the screen and would otherwise prevent scrolling.\r\n         *\r\n         * @since 4.4.0\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n         * @param  value  Grip\r\n         */\r\n        set: function (value) {\r\n            this._dragGrip = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Chart.prototype, \"focusable\", {\r\n        get: function () {\r\n            return this.parent.focusable;\r\n        },\r\n        set: function (value) {\r\n            this.parent.focusable = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Chart;\r\n}(Component));\r\nexport { Chart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Chart\"] = Chart;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Reduce horizontal margins\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            if (target.pixelPaddingLeft > 10) {\r\n                state.properties.paddingLeft = 10;\r\n            }\r\n            if (target.pixelPaddingRight > 10) {\r\n                state.properties.paddingRight = 10;\r\n            }\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Reduce vertical margins\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            if (target.pixelPaddingTop > 10) {\r\n                state.properties.paddingTop = 10;\r\n            }\r\n            if (target.pixelPaddingBottom > 10) {\r\n                state.properties.paddingBottom = 10;\r\n            }\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Remove horizontal padding\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.paddingLeft = 0;\r\n            state.properties.paddingRight = 0;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Remove vertical padding\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.paddingTop = 0;\r\n            state.properties.paddingBottom = 0;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n", "/**\r\n * Module that defines everything related to building bullets.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates bullets.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar Bullet = /** @class */ (function (_super) {\r\n    __extends(Bullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Bullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Bullet\";\r\n        _this.isMeasured = false;\r\n        _this.tooltipX = 0;\r\n        _this.tooltipY = 0;\r\n        _this.layout = \"none\";\r\n        _this.applyOnClones = true;\r\n        _this.copyToLegendMarker = true;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Bullet.prototype, \"locationX\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"locationX\");\r\n        },\r\n        /**\r\n         * Relative horizontal location within cell. (0-1)\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"locationX\", value)) {\r\n                var dataItem = this.dataItem;\r\n                if (dataItem && dataItem.component) {\r\n                    dataItem.component.invalidate();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"locationY\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"locationY\");\r\n        },\r\n        /**\r\n         * Relative vertical location within cell. (0-1)\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"locationY\", value)) {\r\n                var dataItem = this.dataItem;\r\n                if (dataItem && dataItem.component) {\r\n                    dataItem.component.invalidate();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"xField\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"xField\");\r\n        },\r\n        /**\r\n         * [xField description]\r\n         *\r\n         * @todo Description\r\n         * @param value  [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"xField\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"yField\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"yField\");\r\n        },\r\n        /**\r\n         * [yField description]\r\n         *\r\n         * Description\r\n         * @param value  [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"yField\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"isDynamic\", {\r\n        /**\r\n         * @return Redraw on data change?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"isDynamic\");\r\n        },\r\n        /**\r\n         * Indicates if the bullet is \"dynamic\".\r\n         *\r\n         * In most cases the bullets remain the same, even if the underlying data\r\n         * changes.\r\n         *\r\n         * However, in cases where bullet also displays a label, or its size depends\r\n         * on data, it also needs to be redrawn when the underlying data changes.\r\n         *\r\n         * Only those bullets that have set `isDynamic = true` will be redrawn each\r\n         * time data changes. Regular bullets will be reused as they are.\r\n         *\r\n         * @default false\r\n         * @param value  Redraw on data change?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"isDynamic\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"copyToLegendMarker\", {\r\n        /**\r\n         * @return Redraw on data change?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"copyToLegendMarker\");\r\n        },\r\n        /**\r\n         * Indicates if the bullet should be copied to legend marker\r\n         *\r\n         * @default false\r\n         * @param value  Redraw on data change?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"copyToLegendMarker\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Bullet;\r\n}(Container));\r\nexport { Bullet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Bullet\"] = Bullet;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Hide bullets\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.isXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Bullet) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n", "/**\r\n * Legend-related functionality.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../core/Component\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { keyboard } from \"../core/utils/Keyboard\";\r\nimport { registry } from \"../core/Registry\";\r\nimport { getInteraction } from \"../core/interaction/Interaction\";\r\nimport { percent, Percent } from \"../core/utils/Percent\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../core/utils/Utils\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport * as $math from \"../core/utils/Math\";\r\nimport { Sprite } from \"../core/Sprite\";\r\nimport { Disposer } from \"../core/utils/Disposer\";\r\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\nimport { Scrollbar } from \"../core/elements/Scrollbar\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar LegendDataItem = /** @class */ (function (_super) {\r\n    __extends(LegendDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LegendDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.childrenCreated = false;\r\n        _this.className = \"LegendDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(LegendDataItem.prototype, \"label\", {\r\n        /**\r\n         * A legend item's [[Label]] element.\r\n         *\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._label) {\r\n                var label_1 = this.component.labels.create();\r\n                this._label = label_1;\r\n                this.addSprite(label_1);\r\n                this._disposers.push(label_1);\r\n                label_1.parent = this.itemContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.labels.removeValue(label_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._label;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"color\", {\r\n        /**\r\n         * @return Main color\r\n         */\r\n        get: function () {\r\n            return this.properties.color;\r\n        },\r\n        /**\r\n         * Main color of legend data item.\r\n         *\r\n         * This is set by the target element this legend item represents, like\r\n         * a Series or a Slice.\r\n         *\r\n         * It can be used to derive a color in legend's sub-items, like label:\r\n         *\r\n         * ```TypeScript\r\n         * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"legend\": {\r\n         *     // ...\r\n         *     \"labels\": {\r\n         *       \"text\": \"[{color}]{name}[/]\"\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.\r\n         * @param value  Main color\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"color\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"valueLabel\", {\r\n        /**\r\n         * A legend item's [[Label]] element for \"value label\".\r\n         *\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._valueLabel) {\r\n                var valueLabel_1 = this.component.valueLabels.create();\r\n                this._valueLabel = valueLabel_1;\r\n                this.addSprite(valueLabel_1);\r\n                this._disposers.push(valueLabel_1);\r\n                valueLabel_1.parent = this.itemContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.valueLabels.removeValue(valueLabel_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._valueLabel;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"itemContainer\", {\r\n        /**\r\n         * A reference to the main [[Container]] that holds legend item's elements:\r\n         * marker and labels.\r\n         *\r\n         * @return Item container\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._itemContainer) {\r\n                var component_1 = this.component;\r\n                var itemContainer_1 = component_1.itemContainers.create();\r\n                itemContainer_1.parent = component_1;\r\n                this._itemContainer = itemContainer_1;\r\n                this.addSprite(itemContainer_1);\r\n                this._disposers.push(itemContainer_1);\r\n                // Add click/tap event to toggle item\r\n                if (itemContainer_1.togglable) {\r\n                    itemContainer_1.events.on(\"toggled\", function (ev) {\r\n                        component_1.toggleDataItem(ev.target.dataItem);\r\n                    }, undefined, false);\r\n                }\r\n                // Add focus event so that we can track which object is currently in focus\r\n                // for keyboard toggling\r\n                if (itemContainer_1.focusable) {\r\n                    itemContainer_1.events.on(\"hit\", function (ev) {\r\n                        // We need this here in order to reset focused item when it is clicked\r\n                        // normally so that it is not toggled by ENTER afterwards\r\n                        component_1.focusedItem = undefined;\r\n                    }, undefined, false);\r\n                    itemContainer_1.events.on(\"focus\", function (ev) {\r\n                        component_1.focusedItem = ev.target.dataItem;\r\n                    }, undefined, false);\r\n                    itemContainer_1.events.on(\"blur\", function (ev) {\r\n                        component_1.focusedItem = undefined;\r\n                    }, undefined, false);\r\n                }\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.itemContainers.removeValue(itemContainer_1);\r\n                    }\r\n                }));\r\n                if (this.dataContext.uidAttr) {\r\n                    itemContainer_1.readerControls = this.dataContext.uidAttr();\r\n                    itemContainer_1.readerLabelledBy = this.dataContext.uidAttr();\r\n                }\r\n                var sprite = this.dataContext;\r\n                if ((sprite instanceof DataItem || sprite instanceof Sprite) && !sprite.isDisposed()) {\r\n                    var visibilitychanged = function (ev) {\r\n                        itemContainer_1.readerChecked = ev.visible;\r\n                        itemContainer_1.events.disableType(\"toggled\");\r\n                        itemContainer_1.isActive = !ev.visible;\r\n                        itemContainer_1.events.enableType(\"toggled\");\r\n                    };\r\n                    sprite.addDisposer(new Disposer(function () {\r\n                        if (_this.component) {\r\n                            _this.component.dataItems.remove(_this);\r\n                        }\r\n                    }));\r\n                    if (sprite instanceof Sprite) {\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false));\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"hidden\", function (ev) {\r\n                            itemContainer_1.readerChecked = false;\r\n                            itemContainer_1.events.disableType(\"toggled\");\r\n                            itemContainer_1.isActive = true;\r\n                            itemContainer_1.events.enableType(\"toggled\");\r\n                        }, undefined, false));\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"shown\", function (ev) {\r\n                            itemContainer_1.readerChecked = true;\r\n                            itemContainer_1.events.disableType(\"toggled\");\r\n                            itemContainer_1.isActive = false;\r\n                            itemContainer_1.events.enableType(\"toggled\");\r\n                        }, undefined, false));\r\n                    }\r\n                    else {\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false));\r\n                    }\r\n                }\r\n            }\r\n            return this._itemContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"marker\", {\r\n        /**\r\n         * A [[Container]] that holds legend item's marker element.\r\n         *\r\n         * @return Marker\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._marker) {\r\n                var marker_1 = this.component.markers.create();\r\n                this._marker = marker_1;\r\n                marker_1.parent = this.itemContainer;\r\n                this.addSprite(marker_1);\r\n                this._disposers.push(marker_1);\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.markers.removeValue(marker_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._marker;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LegendDataItem;\r\n}(DataItem));\r\nexport { LegendDataItem };\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\r\nvar LegendSettings = /** @class */ (function () {\r\n    function LegendSettings() {\r\n        /**\r\n         * Should marker be created for each legend item.\r\n         */\r\n        this.createMarker = true;\r\n    }\r\n    return LegendSettings;\r\n}());\r\nexport { LegendSettings };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for Legend documentation\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n */\r\nvar Legend = /** @class */ (function (_super) {\r\n    __extends(Legend, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Legend() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Legend\";\r\n        // Set defaults\r\n        _this.layout = \"grid\";\r\n        _this.setPropertyValue(\"useDefaultMarker\", false);\r\n        _this.setPropertyValue(\"scrollable\", false);\r\n        _this.setPropertyValue(\"contentAlign\", \"center\");\r\n        // Create a template container and list for legend items\r\n        var itemContainer = new Container();\r\n        itemContainer.applyOnClones = true;\r\n        itemContainer.padding(8, 0, 8, 0);\r\n        itemContainer.margin(0, 10, 0, 10);\r\n        itemContainer.layout = \"horizontal\";\r\n        itemContainer.clickable = true;\r\n        itemContainer.focusable = true;\r\n        itemContainer.role = \"switch\";\r\n        itemContainer.togglable = true;\r\n        itemContainer.cursorOverStyle = MouseCursorStyle.pointer;\r\n        itemContainer.background.fillOpacity = 0; // creates hit area\r\n        // Create container list using item template we just created\r\n        _this.itemContainers = new ListTemplate(itemContainer);\r\n        _this._disposers.push(new ListDisposer(_this.itemContainers));\r\n        _this._disposers.push(_this.itemContainers.template);\r\n        // Set up global keyboard events for toggling elements\r\n        _this._disposers.push(getInteraction().body.events.on(\"keyup\", function (ev) {\r\n            if (keyboard.isKey(ev.event, \"enter\") && _this.focusedItem) {\r\n                var focusedItem = _this.focusedItem;\r\n                var target = focusedItem.itemContainer;\r\n                if (target.togglable) {\r\n                    _this.toggleDataItem(focusedItem);\r\n                }\r\n                else if (target.clickable && target.events.isEnabled(\"hit\")) {\r\n                    target.dispatchImmediately(\"hit\", { event: ev });\r\n                    // We need this here because \"hit\" event resets `this.focusedItem`\r\n                    // And we need it here\r\n                    _this.focusedItem = focusedItem;\r\n                }\r\n            }\r\n        }, _this));\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create a template container and list for the a marker\r\n        var marker = new Container();\r\n        marker.width = 23;\r\n        marker.height = 23;\r\n        marker.interactionsEnabled = false;\r\n        marker.applyOnClones = true;\r\n        marker.setStateOnChildren = true;\r\n        marker.background.fillOpacity = 0;\r\n        marker.background.strokeOpacity = 0;\r\n        marker.propertyFields.fill = \"fill\";\r\n        marker.valign = \"middle\";\r\n        var disabledColor = interfaceColors.getFor(\"disabledBackground\");\r\n        marker.events.on(\"childadded\", function (event) {\r\n            var child = event.newValue;\r\n            var activeState = child.states.create(\"active\");\r\n            activeState.properties.stroke = disabledColor;\r\n            activeState.properties.fill = disabledColor;\r\n        });\r\n        _this.markers = new ListTemplate(marker);\r\n        _this._disposers.push(new ListDisposer(_this.markers));\r\n        _this._disposers.push(_this.markers.template);\r\n        // Create a legend background element\r\n        var rectangle = marker.createChild(RoundedRectangle);\r\n        rectangle.width = percent(100);\r\n        rectangle.height = percent(100);\r\n        rectangle.applyOnClones = true;\r\n        rectangle.propertyFields.fill = \"fill\"; //othrwise old edge doesn't like as the same pattern is set both on parent and child https://codepen.io/team/amcharts/pen/72d7a98f3fb811d3118795220ff63182\r\n        rectangle.strokeOpacity = 0;\r\n        // Create a template container and list for item labels\r\n        var label = new Label();\r\n        label.text = \"{name}\";\r\n        label.margin(0, 5, 0, 5);\r\n        label.valign = \"middle\";\r\n        label.applyOnClones = true;\r\n        label.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n        _this.labels = new ListTemplate(label);\r\n        _this._disposers.push(new ListDisposer(_this.labels));\r\n        _this._disposers.push(_this.labels.template);\r\n        label.interactionsEnabled = false;\r\n        label.truncate = true;\r\n        label.fullWords = false;\r\n        // Create a template container and list for item value labels\r\n        var valueLabel = new Label();\r\n        valueLabel.margin(0, 5, 0, 0);\r\n        valueLabel.valign = \"middle\";\r\n        valueLabel.width = 50; // to avoid rearranging legend entries when value changes.\r\n        valueLabel.align = \"right\";\r\n        valueLabel.textAlign = \"end\";\r\n        valueLabel.applyOnClones = true;\r\n        valueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n        valueLabel.interactionsEnabled = false;\r\n        _this.valueLabels = new ListTemplate(valueLabel);\r\n        _this._disposers.push(new ListDisposer(_this.valueLabels));\r\n        _this._disposers.push(_this.valueLabels.template);\r\n        _this.position = \"bottom\"; // don't use setPropertyValue here!\r\n        // Create a state for disabled legend items\r\n        itemContainer.states.create(\"active\");\r\n        itemContainer.setStateOnChildren = true;\r\n        // Apply accessibility settings\r\n        _this.role = \"group\";\r\n        _this.events.on(\"layoutvalidated\", _this.handleScrollbar, _this, false);\r\n        _this.events.on(\"parentset\", function () {\r\n            var parent = _this.parent;\r\n            if (parent) {\r\n                _this._disposers.push(parent.events.on(\"maxsizechanged\", function () {\r\n                    if (_this.scrollable) {\r\n                        _this.setTimeout(function () {\r\n                            _this.updateMasks();\r\n                            _this.handleScrollbar();\r\n                            _this._handleWheelReal(1);\r\n                        }, 100);\r\n                    }\r\n                }));\r\n            }\r\n        });\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    Legend.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Legend\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    Legend.prototype.createDataItem = function () {\r\n        return new LegendDataItem();\r\n    };\r\n    /**\r\n     * [validateDataElements description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Legend.prototype.validateDataElements = function () {\r\n        if (this.scrollbar) {\r\n            this.scrollbar.start = 0;\r\n            this.scrollbar.end = 1;\r\n        }\r\n        _super.prototype.validateDataElements.call(this);\r\n    };\r\n    /**\r\n     * [validateDataElement description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem Data item\r\n     * @todo Description\r\n     * @todo Figure out how to update appearance of legend item without losing focus\r\n     * @todo Update legend marker appearance as apperance of related series changes\r\n     */\r\n    Legend.prototype.validateDataElement = function (dataItem) {\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        // Get data item (legend item's) container\r\n        var container = dataItem.itemContainer;\r\n        var marker = dataItem.marker;\r\n        $utils.used(dataItem.label);\r\n        var valueLabel = dataItem.valueLabel;\r\n        // Set parent and update current state\r\n        container.readerChecked = dataItem.dataContext.visible;\r\n        // Tell series its legend data item\r\n        dataItem.dataContext.legendDataItem = dataItem;\r\n        var tempMaxWidth = dataItem.label.maxWidth;\r\n        if (!(dataItem.label.width instanceof Percent)) {\r\n            dataItem.label.width = undefined;\r\n        }\r\n        if (tempMaxWidth > 0) {\r\n            dataItem.label.maxWidth = tempMaxWidth;\r\n        }\r\n        if (valueLabel.align == \"right\") {\r\n            valueLabel.width = undefined;\r\n        }\r\n        var legendSettings = dataItem.dataContext.legendSettings;\r\n        // If we are not using default markers, create a unique legend marker based\r\n        // on the data item type\r\n        var dataContext = dataItem.dataContext;\r\n        if (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof Sprite))) {\r\n            if (!dataItem.childrenCreated) {\r\n                dataContext.createLegendMarker(marker);\r\n                dataItem.childrenCreated = true;\r\n            }\r\n        }\r\n        else {\r\n            this.markers.template.propertyFields.fill = undefined;\r\n        }\r\n        if (dataContext.updateLegendValue) {\r\n            dataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values\r\n        }\r\n        if (dataContext.component && dataContext.component.updateLegendValue) {\r\n            dataContext.component.updateLegendValue(dataContext);\r\n        }\r\n        if (valueLabel.invalid) {\r\n            valueLabel.validate();\r\n        }\r\n        if (valueLabel.text == \"\" || valueLabel.text == undefined) {\r\n            valueLabel.__disabled = true;\r\n        }\r\n        else {\r\n            valueLabel.__disabled = false;\r\n        }\r\n        if (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {\r\n            valueLabel.__disabled = false;\r\n        }\r\n        var visible = dataItem.dataContext.visible;\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        visible = $type.toBoolean(visible);\r\n        dataItem.dataContext.visible = visible;\r\n        container.events.disableType(\"toggled\");\r\n        container.isActive = !visible;\r\n        if (container.isActive) {\r\n            container.setState(\"active\", 0);\r\n        }\r\n        else {\r\n            container.setState(\"default\", 0);\r\n        }\r\n        container.events.enableType(\"toggled\");\r\n    };\r\n    Legend.prototype.afterDraw = function () {\r\n        var _this = this;\r\n        var maxWidth = this.getPropertyValue(\"maxWidth\");\r\n        var maxLabelWidth = 0;\r\n        this.labels.each(function (label) {\r\n            if (label.invalid) {\r\n                label.maxWidth = undefined;\r\n                label.validate();\r\n            }\r\n            if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxLabelWidth) {\r\n                maxLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n            }\r\n        });\r\n        var maxValueLabelWidth = 0;\r\n        this.valueLabels.each(function (label) {\r\n            if (label.invalid) {\r\n                label.validate();\r\n            }\r\n            if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxValueLabelWidth) {\r\n                maxValueLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n            }\r\n        });\r\n        var maxMarkerWidth = 0;\r\n        this.markers.each(function (marker) {\r\n            if (marker.invalid) {\r\n                marker.validate();\r\n            }\r\n            if (marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight > maxMarkerWidth) {\r\n                maxMarkerWidth = marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight;\r\n            }\r\n        });\r\n        var itemContainer = this.itemContainers.template;\r\n        var margin = itemContainer.pixelMarginRight + itemContainer.pixelMarginLeft;\r\n        var maxAdjustedLabelWidth;\r\n        var trueMaxWidth = maxLabelWidth + maxValueLabelWidth + maxMarkerWidth;\r\n        if (!$type.isNumber(maxWidth)) {\r\n            maxAdjustedLabelWidth = maxLabelWidth;\r\n        }\r\n        else {\r\n            maxWidth = maxWidth - margin;\r\n            if (maxWidth > trueMaxWidth) {\r\n                maxWidth = trueMaxWidth;\r\n            }\r\n            maxAdjustedLabelWidth = maxWidth - maxMarkerWidth - maxValueLabelWidth;\r\n        }\r\n        this.labels.each(function (label) {\r\n            if (_this.valueLabels.template.align == \"right\" || label.measuredWidth > maxAdjustedLabelWidth) {\r\n                if (!(label.width instanceof Percent)) {\r\n                    label.width = Math.min(label.maxWidth, maxAdjustedLabelWidth - label.pixelMarginLeft - label.pixelMarginRight);\r\n                    label.maxWidth = label.width;\r\n                }\r\n            }\r\n        });\r\n        if (this.valueLabels.template.align == \"right\") {\r\n            this.valueLabels.each(function (valueLabel) {\r\n                valueLabel.width = maxValueLabelWidth - valueLabel.pixelMarginRight - valueLabel.pixelMarginLeft;\r\n            });\r\n        }\r\n        _super.prototype.afterDraw.call(this);\r\n    };\r\n    Legend.prototype.handleScrollbar = function () {\r\n        var scrollbar = this.scrollbar;\r\n        if (this.scrollable && scrollbar) {\r\n            var measuredHeight = this.maxHeight;\r\n            scrollbar.height = measuredHeight;\r\n            scrollbar.x = this.measuredWidth - scrollbar.pixelWidth - scrollbar.pixelMarginLeft;\r\n            if (this.contentHeight > measuredHeight) {\r\n                scrollbar.visible = true;\r\n                scrollbar.thumb.height = scrollbar.height * measuredHeight / this.contentHeight;\r\n                this.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + scrollbar.pixelMarginRight;\r\n            }\r\n            else {\r\n                scrollbar.thumb.height = scrollbar.height * measuredHeight / this.contentHeight;\r\n                this.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + scrollbar.pixelMarginRight;\r\n                scrollbar.visible = false;\r\n                scrollbar.start = 0;\r\n                scrollbar.end = 1;\r\n            }\r\n            scrollbar.handleThumbPosition();\r\n            this.updateMasks();\r\n        }\r\n    };\r\n    Object.defineProperty(Legend.prototype, \"position\", {\r\n        /**\r\n         * @return Position\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"position\");\r\n        },\r\n        /**\r\n         * Position of the legend.\r\n         *\r\n         * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n         *\r\n         * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different\r\n         * layout structure than other charts.\r\n         *\r\n         * To position legend in [[MapChart]] set legend's `align` (`\"left\"` or\r\n         * `\"right\"`) and `valign` (`\"top\"` or `\"bottom\"`) properties instead.\r\n         *\r\n         * @default \"bottom\"\r\n         * @param value  Position\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"position\", value)) {\r\n                if (value == \"left\" || value == \"right\") {\r\n                    this.margin(10, 5, 10, 10);\r\n                    this.valign = \"middle\";\r\n                    this.contentAlign = \"none\";\r\n                    this.valueLabels.template.align = \"right\";\r\n                    if (!$type.isNumber(this.maxColumns)) {\r\n                        this.maxColumns = 1;\r\n                    }\r\n                    this.width = undefined;\r\n                    this.maxWidth = 220;\r\n                }\r\n                else {\r\n                    this.maxColumns = undefined;\r\n                    this.width = percent(100);\r\n                    this.valueLabels.template.align = \"left\";\r\n                }\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Legend.prototype, \"useDefaultMarker\", {\r\n        /**\r\n         * @return Use default marker?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"useDefaultMarker\");\r\n        },\r\n        /**\r\n         * Should legend try to mirror the look of the related item when building\r\n         * the marker for legend item?\r\n         *\r\n         * If set to `false` it will try to make the marker look like its related\r\n         * item.\r\n         *\r\n         * E.g. if an item is for a Line Series, it will display a line of the\r\n         * same thickness, color, and will use the same bullets if series have them.\r\n         *\r\n         * If set to `true`, all markers will be shown as squares, regardless of te\r\n         * series type.\r\n         *\r\n         * @default false\r\n         * @param value Use default marker?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"useDefaultMarker\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Legend.prototype, \"scrollable\", {\r\n        /**\r\n         * @return Legend Scrollable?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"scrollable\");\r\n        },\r\n        /**\r\n         * If set to `true` the Legend will display a scrollbar if its contents do\r\n         * not fit into its `maxHeight`.\r\n         *\r\n         * Please note that `maxHeight` is automatically set for Legend when its\r\n         * `position` is set to `\"left\"` or `\"right\"`.\r\n         *\r\n         * @default false\r\n         * @since 4.8.0\r\n         * @param  value  Legend Scrollable?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"scrollable\", value, true)) {\r\n                if (value) {\r\n                    var scrollbar = this.createChild(Scrollbar);\r\n                    this.scrollbar = scrollbar;\r\n                    scrollbar.isMeasured = false;\r\n                    scrollbar.orientation = \"vertical\";\r\n                    scrollbar.endGrip.__disabled = true;\r\n                    scrollbar.startGrip.__disabled = true;\r\n                    scrollbar.visible = false;\r\n                    scrollbar.marginLeft = 5;\r\n                    this._mouseWheelDisposer = this.events.on(\"wheel\", this.handleWheel, this, false);\r\n                    this._disposers.push(this._mouseWheelDisposer);\r\n                    this._disposers.push(scrollbar.events.on(\"rangechanged\", this.updateMasks, this, false));\r\n                }\r\n                else {\r\n                    if (this._mouseWheelDisposer) {\r\n                        this._mouseWheelDisposer.dispose();\r\n                        if (this.scrollbar) {\r\n                            this.scrollbar.dispose();\r\n                            this.scrollbar = undefined;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles mouse wheel scrolling of legend.\r\n     *\r\n     * @param  event  Event\r\n     */\r\n    Legend.prototype.handleWheel = function (event) {\r\n        this._handleWheelReal(event.shift.y);\r\n    };\r\n    Legend.prototype._handleWheelReal = function (shift) {\r\n        var scrollbar = this.scrollbar;\r\n        if (scrollbar) {\r\n            var ds = (shift / 1000 * this.measuredHeight / this.contentHeight);\r\n            var delta = scrollbar.end - scrollbar.start;\r\n            if (shift > 0) {\r\n                scrollbar.start = $math.max(0, scrollbar.start - ds);\r\n                scrollbar.end = scrollbar.start + delta;\r\n            }\r\n            else {\r\n                scrollbar.end = $math.min(1, scrollbar.end - ds);\r\n                scrollbar.start = scrollbar.end - delta;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Legend.prototype.updateMasks = function () {\r\n        var _this = this;\r\n        if (this.scrollbar) {\r\n            this.itemContainers.each(function (itemContainer) {\r\n                itemContainer.dy = -_this.scrollbar.thumb.pixelY * _this.contentHeight / _this.maxHeight;\r\n                itemContainer.maskRectangle = { x: 0, y: -itemContainer.dy, width: _this.measuredWidth, height: _this.maxHeight };\r\n            });\r\n        }\r\n        this.invalidatePosition();\r\n    };\r\n    /**\r\n     * Toggles a legend item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item Legend item\r\n     * @todo Maybe do it with togglable instead\r\n     */\r\n    Legend.prototype.toggleDataItem = function (item) {\r\n        var dataContext = item.dataContext;\r\n        if (!dataContext.visible || dataContext.isHiding || (dataContext instanceof Sprite && dataContext.isHidden)) {\r\n            item.color = item.colorOrig;\r\n            dataContext.appeared = true;\r\n            item.itemContainer.isActive = false;\r\n            if (dataContext.hidden === true) {\r\n                dataContext.hidden = false;\r\n            }\r\n            if (dataContext.show) {\r\n                dataContext.show();\r\n            }\r\n            else {\r\n                dataContext.visible = true;\r\n            }\r\n            this.svgContainer.readerAlert(this.language.translate(\"%1 shown\", this.language.locale, item.label.readerTitle));\r\n        }\r\n        else {\r\n            item.itemContainer.isActive = true;\r\n            dataContext.appeared = true;\r\n            if (dataContext.hide) {\r\n                dataContext.hide();\r\n            }\r\n            else {\r\n                dataContext.visible = false;\r\n            }\r\n            this.svgContainer.readerAlert(this.language.translate(\"%1 hidden\", this.language.locale, item.label.readerTitle));\r\n            item.color = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n        }\r\n    };\r\n    Object.defineProperty(Legend.prototype, \"preloader\", {\r\n        /**\r\n         * Override preloader method so that legend does not accidentally show its\r\n         * own preloader.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Always `undefined`\r\n         */\r\n        get: function () {\r\n            return;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [handleDataItemPropertyChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Legend.prototype.handleDataItemPropertyChange = function (dataItem, name) {\r\n        dataItem.valueLabel.invalidate();\r\n        dataItem.label.invalidate();\r\n    };\r\n    return Legend;\r\n}(Component));\r\nexport { Legend };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Legend\"] = Legend;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Move legend to below the chart if chart is narrow\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend && (target.position == \"left\" || target.position == \"right\")) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.position = \"bottom\";\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Move legend to the right if chart is very short\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend && (target.position == \"top\" || target.position == \"bottom\")) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.position = \"right\";\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Disable legend altogether on small charts\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.isXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n", "/**\r\n * Functionality for any series-based elements, like Line Series (graphs),\r\n * Pie slice lists, etc.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../../core/Component\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List, ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { LegendSettings } from \"../Legend\";\r\nimport { options } from \"../../core/Options\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Series]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar SeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(SeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SeriesDataItem\";\r\n        //@todo Should we make `bullets` list disposable?\r\n        //this._disposers.push(new DictionaryDisposer(this.bullets));\r\n        _this.values.value = {};\r\n        _this.values.value = {};\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SeriesDataItem.prototype, \"bullets\", {\r\n        /**\r\n         * A dictionary of data items bullets, where key is uid of a bullet template.\r\n         */\r\n        get: function () {\r\n            if (!this._bullets) {\r\n                this._bullets = new Dictionary();\r\n                this._disposers.push(new DictionaryDisposer(this._bullets));\r\n            }\r\n            return this._bullets;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    SeriesDataItem.prototype.dispose = function () {\r\n        this.bullets.clear();\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    Object.defineProperty(SeriesDataItem.prototype, \"value\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.value.value;\r\n        },\r\n        /**\r\n         * data items's numeric value.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"value\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SeriesDataItem;\r\n}(DataItem));\r\nexport { SeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines base class for any kind of serial data.\r\n *\r\n * @see {@link ISeriesEvents} for a list of available Events\r\n * @see {@link ISeriesAdapters} for a list of available Adapters\r\n * @todo Separate axis-related stuff to some other class so that MapSeries would not have unrelated stuff\r\n */\r\nvar Series = /** @class */ (function (_super) {\r\n    __extends(Series, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Series() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Should this series excluded from the axis scale calculations?\r\n         *\r\n         * @default false\r\n         */\r\n        _this._ignoreMinMax = false;\r\n        /**\r\n         * Should series' bullets?\r\n         *\r\n         * @default true\r\n         */\r\n        _this._showBullets = true;\r\n        /**\r\n         * Settings for the appearance of the related legend items.\r\n         */\r\n        _this.legendSettings = new LegendSettings();\r\n        /**\r\n         * Lowest overal values by type.\r\n         */\r\n        _this._tmin = new Dictionary();\r\n        /**\r\n         * Highest overal values by type.\r\n         */\r\n        _this._tmax = new Dictionary();\r\n        /**\r\n         * Lowest values in current selection by type.\r\n         */\r\n        _this._smin = new Dictionary();\r\n        /**\r\n         * Highest values in current selection by type.\r\n         */\r\n        _this._smax = new Dictionary();\r\n        /**\r\n         * [dataItemsByAxis description]\r\n         *\r\n         * Both by category and date.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this.dataItemsByAxis = new Dictionary();\r\n        /**\r\n         * Normally series items are focusable using keyboard, so that people can\r\n         * select them with a TAB key. However, if there are a lot of data points on\r\n         * screen it might be long and useless to tab through all o fthem.\r\n         *\r\n         * This is where `skipFocusThreshold` comes in. If there are more items than\r\n         * the value set here, we will not make those focusable and rather let screen\r\n         * reader software rely on the series summary, or authors provide alternative\r\n         * detailed information display, such as HTML table.\r\n         *\r\n         * Different series might have different threshold defaults.\r\n         */\r\n        _this.skipFocusThreshold = 20;\r\n        /**\r\n         * Used to indicate if `itemReaderText` was changed \"from the outside\".\r\n         */\r\n        _this._itemReaderTextChanged = false;\r\n        /**\r\n         * Most of the series use absolute values. However sometimes various\r\n         * calculated percent values are need, e.g. item's percent representation\r\n         * across all values in series, etc.\r\n         *\r\n         * It's a resource-intensive operation, so it is disabled by default.\r\n         *\r\n         * If you need percents to be calculated, e.g. for showing them in tooltips,\r\n         * or creating 100% stacks, this setting needs to be set to `true`.\r\n         *\r\n         * NOTE: `PieChart`, which relies on slice percentages, has this\r\n         * automatically set to `true`.\r\n         *\r\n         * @default false\r\n         */\r\n        _this.calculatePercent = false;\r\n        /**\r\n         * When `calculatePercent` is enabled and data item's percent value is\r\n         * calculated, last item's real value is used instead of its working value.\r\n         *\r\n         * This is done for the animations when last item in series (e.g. slice in\r\n         * a `PieSeries`) is hidden or shown. (if we would use real value, the\r\n         * calculated percent would always be 100%).\r\n         *\r\n         * Sometimes there is a need (e.g. for drill-down Sunburst) to disable this\r\n         * hack by setting `usePercentHack` to `false`.\r\n         *\r\n         * @since 4.9.13\r\n         * @default true\r\n         */\r\n        _this.usePercentHack = true;\r\n        /**\r\n         * Specifies if series should be automatically disposed when removing from\r\n         * chart's `series` list.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.autoDispose = true;\r\n        /**\r\n         * When chart/series' data is processed, all kinds of derivative values are\r\n         * calculated. E.g. sum, min, max, change, etc. This is a potentially\r\n         * time-consuming operation, especially prominent in data-heavy charts.\r\n         *\r\n         * If your chart does not need those values, and you have a lot of data,\r\n         * setting this to `true` might give a dramatic increase in initial chart\r\n         * load speed.\r\n         *\r\n         * Please note, regular column and line series usage scenarios do not\r\n         * require derivative values. Those come into play only when you do advanced\r\n         * functionality like coloring segments of charts in different colors\r\n         * depending on change between open and close values, have stacked series, or\r\n         * display any of the derived values, like percent, in tooltips or bullets.\r\n         *\r\n         * @default false\r\n         */\r\n        _this.simplifiedProcessing = false;\r\n        if (_this.constructor === Series) {\r\n            throw new Error(\"'Series' cannot be instantiated directly. Please use a specific series type.\");\r\n        }\r\n        _this.className = \"Series\";\r\n        _this.isMeasured = false;\r\n        _this.layout = \"none\";\r\n        _this.shouldClone = false;\r\n        _this.setPropertyValue(\"hidden\", false);\r\n        _this.axisRanges = new List();\r\n        _this.axisRanges.events.on(\"inserted\", _this.processAxisRange, _this, false);\r\n        _this.minBulletDistance = 0; // otherwise we'll have a lot of cases when people won't see bullets and think it's a bug\r\n        _this.mainContainer = _this.createChild(Container);\r\n        _this.mainContainer.shouldClone = false;\r\n        _this.mainContainer.mask = _this.createChild(Sprite);\r\n        _this._disposers.push(_this.mainContainer);\r\n        // all bullets should go on top of lines/fills. So we add a separate container for bullets and later set it's parent to chart.bulletsContainer\r\n        var bulletsContainer = _this.mainContainer.createChild(Container);\r\n        _this._shouldBeReady.push(bulletsContainer);\r\n        bulletsContainer.shouldClone = false;\r\n        bulletsContainer.layout = \"none\";\r\n        bulletsContainer.virtualParent = _this;\r\n        _this._disposers.push(bulletsContainer);\r\n        _this.bulletsContainer = bulletsContainer;\r\n        _this.tooltip = new Tooltip();\r\n        _this.tooltip.virtualParent = _this;\r\n        _this._disposers.push(_this.tooltip);\r\n        _this.hiddenState.transitionEasing = $ease.cubicIn;\r\n        // this data item holds sums, averages, etc\r\n        _this.dataItem = _this.createDataItem();\r\n        _this._disposers.push(_this.dataItem);\r\n        _this.dataItem.component = _this;\r\n        // Apply accessibility\r\n        _this.role = \"group\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * We need this here so that class names can be applied to bullets container.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.applyTheme = function () {\r\n        _super.prototype.applyTheme.call(this);\r\n        if (options.autoSetClassName && this.bulletsContainer) {\r\n            this.bulletsContainer.className = this.className + \"-bullets\";\r\n            this.bulletsContainer.setClassName();\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    Series.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    Series.prototype.createDataItem = function () {\r\n        return new SeriesDataItem();\r\n    };\r\n    Object.defineProperty(Series.prototype, \"chart\", {\r\n        /**\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart;\r\n        },\r\n        /**\r\n         * Chart series is used on.\r\n         *\r\n         * @param value  Chart\r\n         */\r\n        set: function (value) {\r\n            this._chart = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Positions bullet.\r\n     *\r\n     * @param bullet  Sprite\r\n     */\r\n    Series.prototype.positionBullet = function (bullet) {\r\n        // Placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Decorates newly created bullet after it has been instert into the list.\r\n     *\r\n     * @param event  List event\r\n     * @todo investigate why itemReaderText is undefined\r\n     */\r\n    Series.prototype.processBullet = function (event) {\r\n        var _this = this;\r\n        var bullet = event.newValue;\r\n        bullet.isTemplate = true;\r\n        // Add accessibility options to bullet\r\n        // If there are relatively few bullets, make them focusable\r\n        this.events.once(\"datavalidated\", function (ev) {\r\n            if (_this.itemsFocusable()) {\r\n                bullet.focusable = true;\r\n            }\r\n        });\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * removes bullets\r\n     *\r\n     * @param event  List event\r\n     */\r\n    Series.prototype.removeBullet = function (event) {\r\n        var bullet = event.oldValue;\r\n        this.dataItems.each(function (dataItem) {\r\n            var eachBullet = dataItem.bullets.getKey(bullet.uid);\r\n            if (eachBullet) {\r\n                eachBullet.dispose();\r\n            }\r\n        });\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Validates data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.validateDataItems = function () {\r\n        _super.prototype.validateDataItems.call(this);\r\n        this.processValues(false);\r\n    };\r\n    /**\r\n     * Returns first value for the specific key in the series.\r\n     *\r\n     * @param key  Key\r\n     * @return Value\r\n     * @todo Description\r\n     * @todo Convert to propert object property iterator\r\n     */\r\n    Series.prototype.getFirstValue = function (key, startIndex) {\r\n        // find first\r\n        /*\r\n        return $iter.findMap(this.dataItems.iterator(), (dataItem) => {\r\n            for (let key in dataItem.values) {\r\n                if ($object.hasKey(dataItem.values, key)) {\r\n                    let value: number = dataItem.values[key].workingValue;\r\n                    if ($type.isNumber(value)) {\r\n                        return value;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return null;\r\n        });*/\r\n        //if (startIndex > 0 && startIndex < this.dataItems.length - 1) {\r\n        //startIndex++;\r\n        //}\r\n        for (var i = startIndex; i >= 0; i--) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            var value = dataItem.getActualWorkingValue(key);\r\n            if ($type.isNumber(value)) {\r\n                return value;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns first value for the specific key in the series.\r\n     *\r\n     * @param key  Key\r\n     * @return Value\r\n     * @todo Description\r\n     * @todo Convert to propert object property iterator\r\n     */\r\n    Series.prototype.getAbsoluteFirstValue = function (key) {\r\n        for (var i = 0; i < this.dataItems.length; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            var value = dataItem.values[key].value;\r\n            if ($type.isNumber(value)) {\r\n                return value;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * [rangeChangeUpdate description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    Series.prototype.rangeChangeUpdate = function () {\r\n        _super.prototype.rangeChangeUpdate.call(this);\r\n        this.processValues(true);\r\n    };\r\n    /**\r\n     * [processValues description]\r\n     *\r\n     * @todo Description\r\n     * @todo Convert to propert object property iterator\r\n     * @param dataItems [description]\r\n     */\r\n    Series.prototype.processValues = function (working) {\r\n        var _this = this;\r\n        if (!this.simplifiedProcessing) {\r\n            var dataItems = this.dataItems;\r\n            var count_1 = {};\r\n            var sum_1 = {};\r\n            var absoluteSum_1 = {};\r\n            var low_1 = {};\r\n            var high_1 = {};\r\n            var open_1 = {};\r\n            var close_1 = {};\r\n            var previous_1 = {};\r\n            var first_1 = {};\r\n            var absoluteFirst_1 = {};\r\n            //let duration: number = 0; // todo: check if series uses selection.change or selection.change.percent and set duration to interpolationduration\r\n            var startIndex_1 = $math.max(0, this.startIndex);\r\n            startIndex_1 = $math.min(startIndex_1, this.dataItems.length);\r\n            var endIndex = $math.min(this.endIndex, this.dataItems.length);\r\n            if (!$type.isNumber(startIndex_1)) {\r\n                startIndex_1 = 0;\r\n            }\r\n            if (!$type.isNumber(endIndex)) {\r\n                endIndex = this.dataItems.length;\r\n            }\r\n            if (startIndex_1 > 0) {\r\n                var dataItem_1 = dataItems.getIndex(startIndex_1 - 1);\r\n                $object.each(dataItem_1.values, function (key, values) {\r\n                    var value = dataItem_1.getActualWorkingValue(key);\r\n                    if ($type.isNumber(value)) {\r\n                        // save previous\r\n                        previous_1[key] = value;\r\n                    }\r\n                });\r\n            }\r\n            var _loop_1 = function (i) {\r\n                var dataItem_2 = dataItems.getIndex(i);\r\n                $object.each(dataItem_2.values, function (key, values) {\r\n                    var value = dataItem_2.getActualWorkingValue(key);\r\n                    //if (i >= startIndex && i <= endIndex) { // do not add to count, sum etc if it is not within start/end index\r\n                    if ($type.isNumber(value)) {\r\n                        // count values\r\n                        if (!$type.isNumber(count_1[key])) {\r\n                            count_1[key] = 0;\r\n                        }\r\n                        count_1[key]++;\r\n                        // sum values\r\n                        if (!$type.isNumber(sum_1[key])) {\r\n                            sum_1[key] = 0;\r\n                        }\r\n                        sum_1[key] += value;\r\n                        // absolute sum values\r\n                        if (!$type.isNumber(absoluteSum_1[key])) {\r\n                            absoluteSum_1[key] = 0;\r\n                        }\r\n                        absoluteSum_1[key] += Math.abs(value);\r\n                        // open\r\n                        if (!$type.isNumber(open_1[key])) {\r\n                            open_1[key] = value;\r\n                        }\r\n                        // close\r\n                        close_1[key] = value;\r\n                        // low\r\n                        if (!$type.isNumber(low_1[key])) {\r\n                            low_1[key] = value;\r\n                        }\r\n                        else {\r\n                            if (low_1[key] > value) {\r\n                                low_1[key] = value;\r\n                            }\r\n                        }\r\n                        // high\r\n                        if (!$type.isNumber(high_1[key])) {\r\n                            high_1[key] = value;\r\n                        }\r\n                        else {\r\n                            if (high_1[key] < value) {\r\n                                high_1[key] = value;\r\n                            }\r\n                        }\r\n                        if (!$type.isNumber(first_1[key])) {\r\n                            first_1[key] = _this.getFirstValue(key, startIndex_1);\r\n                        }\r\n                        if (!$type.isNumber(absoluteFirst_1[key])) {\r\n                            absoluteFirst_1[key] = _this.getAbsoluteFirstValue(key);\r\n                        }\r\n                        // change\r\n                        dataItem_2.setCalculatedValue(key, value - first_1[key], \"change\");\r\n                        // change from start percent\r\n                        // will fail if first value is 0\r\n                        dataItem_2.setCalculatedValue(key, (value - first_1[key]) / first_1[key] * 100, \"changePercent\");\r\n                        dataItem_2.setCalculatedValue(key, (value - absoluteFirst_1[key]), \"startChange\");\r\n                        dataItem_2.setCalculatedValue(key, (value - absoluteFirst_1[key]) / absoluteFirst_1[key] * 100, \"startChangePercent\");\r\n                        // previous change\r\n                        var prevValue = previous_1[key];\r\n                        if (!$type.isNumber(prevValue)) {\r\n                            prevValue = value;\r\n                        }\r\n                        dataItem_2.setCalculatedValue(key, value - prevValue, \"previousChange\");\r\n                        // previous change percent\r\n                        dataItem_2.setCalculatedValue(key, (value - prevValue) / prevValue * 100, \"previousChangePercent\");\r\n                        // save previous\r\n                        previous_1[key] = value;\r\n                    }\r\n                });\r\n            };\r\n            for (var i = startIndex_1; i < endIndex; i++) {\r\n                _loop_1(i);\r\n            }\r\n            if (this.calculatePercent) {\r\n                var _loop_2 = function (i) {\r\n                    var dataItem_3 = dataItems.getIndex(i);\r\n                    $object.each(dataItem_3.values, function (key) {\r\n                        var ksum = absoluteSum_1[key];\r\n                        var value = dataItem_3.getActualWorkingValue(key);\r\n                        if ($type.isNumber(value)) {\r\n                            if (ksum > 0) {\r\n                                if (_this.usePercentHack) {\r\n                                    // this hack is made in order to make it possible to animate single slice to 0\r\n                                    // if there is only one slice left, percent value is always 100%, so it won't animate\r\n                                    // so we use real value of a slice instead of current value\r\n                                    if (value == ksum) {\r\n                                        ksum = dataItem_3.values[key].value;\r\n                                    }\r\n                                }\r\n                                var percent = value / ksum * 100;\r\n                                dataItem_3.setCalculatedValue(key, percent, \"percent\");\r\n                            }\r\n                            else {\r\n                                dataItem_3.setCalculatedValue(key, 0, \"percent\");\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n                for (var i = startIndex_1; i < endIndex; i++) {\r\n                    _loop_2(i);\r\n                }\r\n            }\r\n            // calculate one before first (cant do that in cycle, as we don't know open yet\r\n            // when drawing line chart we should draw line to the invisible data point to the left, otherwise the line will always look like it starts from the selected point\r\n            // so we do startIndex - 1\r\n            if (startIndex_1 > 0) {\r\n                var zeroItem_1 = dataItems.getIndex(startIndex_1 - 1);\r\n                $object.each(zeroItem_1.values, function (key) {\r\n                    var value = zeroItem_1.values[key].value;\r\n                    // change\r\n                    zeroItem_1.setCalculatedValue(key, value - open_1[key], \"change\");\r\n                    // change percent\r\n                    zeroItem_1.setCalculatedValue(key, (value - open_1[key]) / open_1[key] * 100, \"changePercent\");\r\n                });\r\n            }\r\n            // we save various data like sum, average to dataPoint of the series\r\n            var dataItem_4 = this.dataItem;\r\n            $object.each(dataItem_4.values, function (key) {\r\n                dataItem_4.setCalculatedValue(key, sum_1[key], \"sum\");\r\n                dataItem_4.setCalculatedValue(key, absoluteSum_1[key], \"absoluteSum\");\r\n                dataItem_4.setCalculatedValue(key, sum_1[key] / count_1[key], \"average\");\r\n                dataItem_4.setCalculatedValue(key, open_1[key], \"open\");\r\n                dataItem_4.setCalculatedValue(key, close_1[key], \"close\");\r\n                dataItem_4.setCalculatedValue(key, low_1[key], \"low\");\r\n                dataItem_4.setCalculatedValue(key, high_1[key], \"high\");\r\n                dataItem_4.setCalculatedValue(key, count_1[key], \"count\");\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.validate = function () {\r\n        if ($utils.isIE()) {\r\n            this.filters.clear();\r\n        }\r\n        $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n            //axisRange.contents.disposeChildren(); // not good for columns, as they are reused\r\n            //\t\t\taxisRange.appendChildren();\r\n            axisRange.validate();\r\n        });\r\n        _super.prototype.validate.call(this);\r\n        var bulletsContainer = this.bulletsContainer;\r\n        bulletsContainer.fill = this.fill;\r\n        bulletsContainer.stroke = this.stroke;\r\n        bulletsContainer.x = this.pixelX;\r\n        bulletsContainer.y = this.pixelY;\r\n        if (this.bulletsContainer.children.length > 0) {\r\n            if (this._showBullets) {\r\n                for (var i = 0; i < this.startIndex; i++) {\r\n                    var dataItem = this.dataItems.getIndex(i);\r\n                    if (dataItem) {\r\n                        dataItem.bullets.each(function (key, bullet) {\r\n                            bullet.__disabled = true;\r\n                        });\r\n                    }\r\n                }\r\n                for (var i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n                    var dataItem = this.dataItems.getIndex(i);\r\n                    if (dataItem) {\r\n                        dataItem.bullets.each(function (key, bullet) {\r\n                            bullet.__disabled = true;\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.bulletsContainer.children.each(function (bullet) {\r\n                    bullet.__disabled = true;\r\n                });\r\n            }\r\n        }\r\n        this.updateTooltipBounds();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Series.prototype.updateTooltipBounds = function () {\r\n        if (this.topParent) {\r\n            var x = 0;\r\n            var y = 0;\r\n            var w = this.topParent.maxWidth;\r\n            var h = this.topParent.maxHeight;\r\n            var rect = { x: x, y: y, width: w, height: h };\r\n            this.tooltip.setBounds(rect);\r\n        }\r\n    };\r\n    Series.prototype.shouldCreateBullet = function (dataItem, bulletTemplate) {\r\n        return true;\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    Series.prototype.validateDataElement = function (dataItem) {\r\n        var _this = this;\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        if (this._showBullets) {\r\n            if (!this.isHidden) {\r\n                this.bulletsContainer.visible = true;\r\n            }\r\n            this.bullets.each(function (bulletTemplate) {\r\n                // always better to use the same, this helps to avoid redrawing\r\n                var bullet = dataItem.bullets.getKey(bulletTemplate.uid);\r\n                if (_this.shouldCreateBullet(dataItem, bulletTemplate)) {\r\n                    if (!bullet) {\r\n                        var disabledField = bulletTemplate.propertyFields.disabled;\r\n                        var dataContext = dataItem.dataContext;\r\n                        if (disabledField && dataContext && dataContext[disabledField] === false) {\r\n                            bulletTemplate.applyOnClones = false;\r\n                            bulletTemplate.disabled = false;\r\n                            bullet = bulletTemplate.clone();\r\n                            bulletTemplate.disabled = true;\r\n                            bulletTemplate.applyOnClones = true;\r\n                        }\r\n                        else {\r\n                            bullet = bulletTemplate.clone();\r\n                        }\r\n                        bullet.shouldClone = false;\r\n                        dataItem.addSprite(bullet);\r\n                        if (!_this.visible || _this.isHiding) {\r\n                            bullet.hide(0);\r\n                        }\r\n                    }\r\n                    var currentDataItem = bullet.dataItem;\r\n                    if (currentDataItem != dataItem) {\r\n                        // set to undefined in order not to reuse\r\n                        if (currentDataItem) {\r\n                            currentDataItem.bullets.setKey(bulletTemplate.uid, undefined);\r\n                        }\r\n                        var readerText_1 = _this.itemReaderText;\r\n                        if (bullet instanceof Bullet) {\r\n                            if (!readerText_1) {\r\n                                readerText_1 = (\"{\" + bullet.xField + \"}: {\" + bullet.yField + \"}\");\r\n                            }\r\n                            if (bullet.isDynamic) {\r\n                                dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n                                //dataItem.events.on(\"calculatedvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n                                _this.dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n                            }\r\n                            bullet.deepInvalidate();\r\n                        }\r\n                        // Add accessibility to bullet\r\n                        if (bullet.focusable) {\r\n                            bullet.events.on(\"focus\", function (ev) {\r\n                                bullet.readerTitle = _this.populateString(readerText_1, bullet.dataItem);\r\n                            }, undefined, false);\r\n                            bullet.events.on(\"blur\", function (ev) {\r\n                                bullet.readerTitle = \"\";\r\n                            }, undefined, false);\r\n                        }\r\n                        if (bullet.hoverable) {\r\n                            bullet.events.on(\"over\", function (ev) {\r\n                                bullet.readerTitle = _this.populateString(readerText_1, bullet.dataItem);\r\n                            }, undefined, false);\r\n                            bullet.events.on(\"out\", function (ev) {\r\n                                bullet.readerTitle = \"\";\r\n                            }, undefined, false);\r\n                        }\r\n                    }\r\n                    bullet.parent = _this.bulletsContainer;\r\n                    dataItem.bullets.setKey(bulletTemplate.uid, bullet);\r\n                    // pass max w/h so we'd know if we should show/hide somethings\r\n                    bullet.maxWidth = dataItem.itemWidth;\r\n                    bullet.maxHeight = dataItem.itemHeight;\r\n                    bullet.__disabled = false;\r\n                    _this.positionBullet(bullet);\r\n                }\r\n                else {\r\n                    if (bullet) {\r\n                        bullet.__disabled = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.bulletsContainer.visible = false;\r\n        }\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\r\n        if (!this.dataRangeInvalid) {\r\n            this.invalidateProcessedData();\r\n        }\r\n    };\r\n    Object.defineProperty(Series.prototype, \"ignoreMinMax\", {\r\n        /**\r\n         * @return Exclude from calculations?\r\n         */\r\n        get: function () {\r\n            return this._ignoreMinMax;\r\n        },\r\n        /**\r\n         * Should this series excluded from the axis scale calculations?\r\n         *\r\n         * @default false\r\n         * @param value  Exclude from calculations?\r\n         */\r\n        set: function (value) {\r\n            this._ignoreMinMax = value;\r\n            this.invalidateDataItems();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Create a mask for the series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.createMask = function () {\r\n        // A placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Process axis range after it has been added to the list.\r\n     *\r\n     * @param event  Event\r\n     */\r\n    Series.prototype.processAxisRange = function (event) {\r\n        // create container if not existing\r\n        if (!this.rangesContainer) {\r\n            this.rangesContainer = this.createChild(Container);\r\n            this.rangesContainer.shouldClone = false;\r\n            this.rangesContainer.isMeasured = false;\r\n        }\r\n        var axisRange = event.newValue;\r\n        if (axisRange) {\r\n            axisRange.contents.parent = this.rangesContainer;\r\n            axisRange.isRange = true;\r\n            axisRange.events.on(\"valuechanged\", this.invalidateDataItems, this, false);\r\n        }\r\n    };\r\n    /**\r\n     * [getAxisField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param axis  [description]\r\n     * @return [description]\r\n     */\r\n    Series.prototype.getAxisField = function (axis) {\r\n        return;\r\n    };\r\n    /**\r\n     * Shows the tooltip at specific position.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param xPosition  X\r\n     * @param yPosition  Y\r\n     */\r\n    Series.prototype.showTooltipAtPosition = function (xPosition, yPosition) {\r\n        // Placeholder method for extending classes to override.\r\n    };\r\n    Object.defineProperty(Series.prototype, \"minBulletDistance\", {\r\n        /**\r\n         * @return Distance (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minBulletDistance\");\r\n        },\r\n        /**\r\n         * Minimal distance between data points in pixels.\r\n         *\r\n         * If distance gets smaller than this, bullets are turned off to avoid\r\n         * overlapping.\r\n         *\r\n         * `0` (zero) disables this behavior.\r\n         *\r\n         * IMPORTANT: This setting will work only when Series' base axis\r\n         * is [[CategoryAxis]] or [[DateAxis]]. If base axis is [[ValueAxis]] the\r\n         * setting will be ignored, because it would be a huge overhead to measure\r\n         * distance between each and every bullet.\r\n         *\r\n         * @default 0\r\n         * @param value  Distance (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minBulletDistance\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Series.prototype, \"bullets\", {\r\n        /**\r\n         * A list of bullets that will be added to each and every items in the\r\n         * series.\r\n         *\r\n         * You can push any object that is a descendant of a [[Sprite]] here. All\r\n         * items added to this list will be copied and used as a bullet on all data\r\n         * items, including their properties, events, etc.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/bullets/} for more info about the concept of Bullets\r\n         * @return List of bullets.\r\n         */\r\n        get: function () {\r\n            if (!this._bullets) {\r\n                this._bullets = new ListTemplate(new Bullet());\r\n                this._bullets.template.virtualParent = this;\r\n                this._bullets.events.on(\"inserted\", this.processBullet, this, false);\r\n                this._bullets.events.on(\"removed\", this.removeBullet, this, false);\r\n                this._disposers.push(new ListDisposer(this._bullets));\r\n                this._disposers.push(this._bullets.template);\r\n            }\r\n            return this._bullets;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Binds related legend data item's visual settings to this series' visual\r\n     * settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    Series.prototype.createLegendMarker = function (marker) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    Object.defineProperty(Series.prototype, \"hiddenInLegend\", {\r\n        /**\r\n         * @return Hidden in legend?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hiddenInLegend\");\r\n        },\r\n        /**\r\n         * Should the series be hidden in legend?\r\n         *\r\n         * @param value Hidden in legend?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"hiddenInLegend\", value)) {\r\n                if (this.chart) {\r\n                    this.chart.feedLegend();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Series.prototype, \"name\", {\r\n        /**\r\n         * @return Name\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"name\");\r\n        },\r\n        /**\r\n         * Series' name.\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"name\", value);\r\n            var legendDataItem = this.legendDataItem;\r\n            if (legendDataItem) {\r\n                legendDataItem.component.invalidate();\r\n                legendDataItem.component.invalidateRawData();\r\n            }\r\n            this.readerTitle = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Series.prototype, \"itemReaderText\", {\r\n        /**\r\n         * @return Screen reader text template\r\n         */\r\n        get: function () {\r\n            // Get explicitly set reader text\r\n            var readerText = this._itemReaderText;\r\n            // Not set? Let's try something else\r\n            if (!readerText) {\r\n                // Tooltip text?\r\n                if (this.tooltipText) {\r\n                    readerText = $utils.plainText(this.tooltipText);\r\n                }\r\n                else if (this.tooltipHTML) {\r\n                    readerText = $utils.plainText(this.tooltipHTML);\r\n                }\r\n            }\r\n            if (!this._adapterO) {\r\n                return readerText;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"itemReaderText\", readerText);\r\n            }\r\n        },\r\n        /**\r\n         * Screen reader text to be applied to each individual data item, such\r\n         * as bullets, columns or slices.\r\n         *\r\n         * The template can contain field reference meta codes, i.e. `{dateX}`,\r\n         * `{valueY}`, etc.\r\n         *\r\n         * Any text formatting options, e.g. `[bold]` will be ignored.\r\n         *\r\n         * @param value Screen reader text template\r\n         */\r\n        set: function (value) {\r\n            this._itemReaderText = value;\r\n            this._itemReaderTextChanged = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns if number of data items in the series are beyond non-focusable\r\n     * count and should not be available for TAB-through.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Items focusable?\r\n     */\r\n    Series.prototype.itemsFocusable = function () {\r\n        return this.dataItems.length >= this.skipFocusThreshold ? false : true;\r\n    };\r\n    Object.defineProperty(Series.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * Legend data item that corresponds to this series.\r\n         *\r\n         * @param value  Data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            this._legendDataItem.itemContainer.deepInvalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates corresponding legend data item with current values.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    Series.prototype.updateLegendValue = function (dataItem, notRange) {\r\n        // if this series has legend item\r\n        if (this.legendDataItem) {\r\n            var legendSettings = this.legendSettings;\r\n            var legendDataItem = this.legendDataItem;\r\n            var label = legendDataItem.label;\r\n            var valueLabel = legendDataItem.valueLabel;\r\n            // update legend\r\n            if ((dataItem && !dataItem.isDisposed()) || notRange) {\r\n                if (valueLabel) {\r\n                    if (legendSettings.itemValueText) {\r\n                        valueLabel.text = legendSettings.itemValueText;\r\n                    }\r\n                    valueLabel.dataItem = dataItem;\r\n                }\r\n                if (label) {\r\n                    if (legendSettings.itemLabelText) {\r\n                        label.text = legendSettings.itemLabelText;\r\n                    }\r\n                    label.dataItem = dataItem;\r\n                }\r\n            }\r\n            else {\r\n                if (label) {\r\n                    // if itemLabelText is set, means we have to reset label even if labelText is not set\r\n                    if (legendSettings.labelText || legendSettings.itemLabelText != undefined) {\r\n                        label.text = legendSettings.labelText;\r\n                    }\r\n                    label.dataItem = this.dataItem;\r\n                }\r\n                if (valueLabel) {\r\n                    if (legendSettings.valueText || legendSettings.itemValueText != undefined) {\r\n                        valueLabel.text = legendSettings.valueText;\r\n                    }\r\n                    valueLabel.dataItem = this.dataItem;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[Series]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    Series.prototype.copyFrom = function (source) {\r\n        this.bullets.copyFrom(source.bullets);\r\n        this.bulletsContainer.copyFrom(source.bulletsContainer);\r\n        this.calculatePercent = source.calculatePercent;\r\n        this.usePercentHack = source.usePercentHack;\r\n        this.simplifiedProcessing = source.simplifiedProcessing;\r\n        _super.prototype.copyFrom.call(this, source);\r\n    };\r\n    /**\r\n     * Displays a modal or console message with error, and halts any further\r\n     * processing of this element.\r\n     *\r\n     * @param e Error\r\n     */\r\n    Series.prototype.raiseCriticalError = function (e) {\r\n        if (this._chart && this._chart.modal) {\r\n            this._chart.modal.content = this._chart.adapter.apply(\"criticalError\", e).message;\r\n            this._chart.modal.closable = false;\r\n            if (!options.suppressErrors) {\r\n                this._chart.modal.open();\r\n            }\r\n            this._chart.disabled = true;\r\n        }\r\n        if (options.verbose) {\r\n            console.log(e);\r\n        }\r\n    };\r\n    /**\r\n     * Applies filters to the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.applyFilters = function () {\r\n        var _this = this;\r\n        _super.prototype.applyFilters.call(this);\r\n        this.bulletsContainer.filters.clear();\r\n        // copyFrom of a list copies, does not clone\r\n        $iter.each(this.filters.iterator(), function (filter) {\r\n            _this.bulletsContainer.filters.push(filter.clone());\r\n        });\r\n    };\r\n    Object.defineProperty(Series.prototype, \"heatRules\", {\r\n        /**\r\n         * A list of heat rules to apply to series' elements based on the value\r\n         * of the data item.\r\n         *\r\n         * Heat rules can be any \"numeric\" (including `Color`) property, and can also\r\n         * be applied to child objects of series, like columns, bullets, etc.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.heatRules.push({\r\n         *  \"target\": series.columns.template,\r\n         *  \"property\": \"fill\",\r\n         *  \"min\": am4core.color(\"#F5DBCB\"),\r\n         *  \"max\": am4core.color(\"#ED7B84\"),\r\n         *  \"dataField\": \"valueY\"\r\n         *});\r\n         *```\r\n         * ```Javacript\r\n         * series.heatRules.push({\r\n         *  \"target\": series.columns.template,\r\n         *  \"property\": \"fill\",\r\n         *  \"min\": am4core.color(\"#F5DBCB\"),\r\n         *  \"max\": am4core.color(\"#ED7B84\"),\r\n         *  \"dataField\": \"valueY\"\r\n         *});\r\n         *```\r\n         *```JSON\r\n         *{\r\n         *  // ...\r\n         *  \"series\": [{\r\n         *    \"type\": \"ColumnSeries\",\r\n         *    \"heatRules\": [{\r\n         *      \"target\": \"columns.template\",\r\n         *      \"property\": \"fill\",\r\n         *      \"min\": \"#F5DBCB\",\r\n         *      \"max\": \"#ED7B84\",\r\n         *      \"dataField\": \"valueY\"\r\n         *    }]\r\n         *  }]\r\n         *}\r\n         *```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/series/#Heat_maps} for more about heat rules\r\n         * @return  Heat rules\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._heatRules) {\r\n                this._heatRules = new List();\r\n                this._heatRules.events.on(\"inserted\", function (event) {\r\n                    var heatRule = event.newValue;\r\n                    var target = heatRule.target;\r\n                    if (target) {\r\n                        var dataField_1 = heatRule.dataField;\r\n                        if (!$type.hasValue(dataField_1)) {\r\n                            dataField_1 = \"value\";\r\n                        }\r\n                        var seriesDataItem_1 = _this.dataItem;\r\n                        var property_1 = heatRule.property;\r\n                        var minValue = $type.toNumber(heatRule.minValue);\r\n                        var maxValue = $type.toNumber(heatRule.maxValue);\r\n                        if (!$type.isNumber(minValue) && !$type.isNumber(maxValue)) {\r\n                            _this.dataItem.events.on(\"calculatedvaluechanged\", function (event) {\r\n                                if (event.property == dataField_1) {\r\n                                    $iter.each(_this.dataItems.iterator(), function (dataItem) {\r\n                                        var foundSprite = false;\r\n                                        $array.each(dataItem.sprites, function (sprite) {\r\n                                            if (sprite.clonedFrom == target) {\r\n                                                var anySprite = sprite;\r\n                                                anySprite[property_1] = anySprite[property_1];\r\n                                                foundSprite = true;\r\n                                            }\r\n                                        });\r\n                                        if (!foundSprite) {\r\n                                            $array.each(dataItem.sprites, function (sprite) {\r\n                                                if (sprite instanceof Container) {\r\n                                                    $iter.each(sprite.children.iterator(), function (child) {\r\n                                                        if (child.className == target.className) {\r\n                                                            var anyChild = child;\r\n                                                            anyChild[property_1] = anyChild[property_1];\r\n                                                        }\r\n                                                        // giveup here\r\n                                                        else if (child instanceof Container) {\r\n                                                            child.deepInvalidate();\r\n                                                        }\r\n                                                    });\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                        _this.dataItems.template.events.on(\"workingvaluechanged\", function (event) {\r\n                            if (event.property == dataField_1) {\r\n                                var dataItem = event.target;\r\n                                var foundSprite_1 = false;\r\n                                $array.each(dataItem.sprites, function (sprite) {\r\n                                    if (sprite.clonedFrom == target) {\r\n                                        var anySprite = sprite;\r\n                                        anySprite[property_1] = anySprite[property_1];\r\n                                        foundSprite_1 = true;\r\n                                    }\r\n                                });\r\n                                if (!foundSprite_1) {\r\n                                    $array.each(dataItem.sprites, function (sprite) {\r\n                                        if (sprite instanceof Container) {\r\n                                            $iter.each(sprite.children.iterator(), function (child) {\r\n                                                if (child.className == target.className) {\r\n                                                    var anyChild = child;\r\n                                                    anyChild[property_1] = anyChild[property_1];\r\n                                                }\r\n                                                // givup here\r\n                                                else if (child instanceof Container) {\r\n                                                    child.deepInvalidate();\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        });\r\n                        target.adapter.add(property_1, function (value, ruleTarget, property) {\r\n                            var minValue = $type.toNumber(heatRule.minValue);\r\n                            var maxValue = $type.toNumber(heatRule.maxValue);\r\n                            var min = heatRule.min;\r\n                            var max = heatRule.max;\r\n                            if (ruleTarget instanceof Sprite) {\r\n                                var anySprite = ruleTarget;\r\n                                var propertyField = anySprite.propertyFields[property];\r\n                                if (propertyField && ruleTarget.dataItem) {\r\n                                    var dataContext = ruleTarget.dataItem.dataContext;\r\n                                    if (dataContext && $type.hasValue(dataContext[propertyField])) {\r\n                                        return value;\r\n                                    }\r\n                                }\r\n                            }\r\n                            var dataItem = ruleTarget.dataItem;\r\n                            if (!$type.isNumber(minValue)) {\r\n                                minValue = seriesDataItem_1.values[dataField_1].low;\r\n                            }\r\n                            if (!$type.isNumber(maxValue)) {\r\n                                maxValue = seriesDataItem_1.values[dataField_1].high;\r\n                            }\r\n                            if (dataItem) {\r\n                                var fieldValues = dataItem.values[dataField_1];\r\n                                if (fieldValues) {\r\n                                    var workingValue = dataItem.getActualWorkingValue(dataField_1);\r\n                                    if ($type.hasValue(min) && $type.hasValue(max) && $type.isNumber(minValue) && $type.isNumber(maxValue) && $type.isNumber(workingValue)) {\r\n                                        var percent = void 0;\r\n                                        if (heatRule.logarithmic) {\r\n                                            percent = (Math.log(workingValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                                        }\r\n                                        else {\r\n                                            percent = (workingValue - minValue) / (maxValue - minValue);\r\n                                        }\r\n                                        if ($type.isNumber(workingValue) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                                            percent = 0.5;\r\n                                        }\r\n                                        // fixes problems if all values are the same\r\n                                        if ($type.isNumber(min)) {\r\n                                            return min + (max - min) * percent;\r\n                                        }\r\n                                        else if (min instanceof Color) {\r\n                                            return new Color($colors.interpolate(min.rgb, max.rgb, percent));\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            return value;\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            return this._heatRules;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Series.prototype.processConfig = function (config) {\r\n        var heatRules;\r\n        if (config) {\r\n            // Set up bullets\r\n            if ($type.hasValue(config.bullets) && $type.isArray(config.bullets)) {\r\n                for (var i = 0, len = config.bullets.length; i < len; i++) {\r\n                    var bullets = config.bullets[i];\r\n                    if (!$type.hasValue(bullets.type)) {\r\n                        bullets.type = \"Bullet\";\r\n                    }\r\n                }\r\n            }\r\n            // Let's take heatRules out of the config, so that we can process\r\n            // them later, when bullets are already there\r\n            if ($type.hasValue(config.heatRules) && $type.isArray(config.heatRules)) {\r\n                heatRules = config.heatRules;\r\n                delete config.heatRules;\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n        // Process heat rules again, when all other elements are ready\r\n        if (heatRules) {\r\n            for (var i = 0, len = heatRules.length; i < len; i++) {\r\n                var rule = heatRules[i];\r\n                // Resolve target\r\n                var target = this;\r\n                if ($type.hasValue(rule.target) && $type.isString(rule.target)) {\r\n                    // Check if we can find this element by id\r\n                    if (this.map.hasKey(rule.target)) {\r\n                        target = this.map.getKey(rule.target);\r\n                    }\r\n                    else {\r\n                        var parts = rule.target.split(\".\");\r\n                        for (var x = 0; x < parts.length; x++) {\r\n                            if (target instanceof List) {\r\n                                var listitem = target.getIndex($type.toNumber(parts[x]));\r\n                                if (!listitem) {\r\n                                    target = target[parts[x]];\r\n                                }\r\n                                else {\r\n                                    target = listitem;\r\n                                }\r\n                            }\r\n                            else {\r\n                                var maybeIndex = parts[x].match(/^(.*)\\[([0-9]+)\\]/);\r\n                                if (maybeIndex) {\r\n                                    if (target[maybeIndex[1]] instanceof List) {\r\n                                        target = target[maybeIndex[1]].getIndex($type.toNumber(maybeIndex[2]));\r\n                                    }\r\n                                    else {\r\n                                        target = target[maybeIndex[1]][$type.toNumber(maybeIndex[2])];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    target = target[parts[x]];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                rule.target = target;\r\n                // Resolve colors and percents\r\n                if ($type.hasValue(rule.min)) {\r\n                    rule.min = this.maybeColorOrPercent(rule.min);\r\n                }\r\n                if ($type.hasValue(rule.max)) {\r\n                    rule.max = this.maybeColorOrPercent(rule.max);\r\n                }\r\n            }\r\n            _super.prototype.processConfig.call(this, {\r\n                heatRules: heatRules\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns visibility value\r\n     * @ignore\r\n     */\r\n    /*\r\n        protected getVisibility(): boolean {\r\n            let hidden = this.getPropertyValue(\"hidden\");\r\n            if (hidden) {\r\n                return false;\r\n            }\r\n            else {\r\n                return super.getVisibility();\r\n            }\r\n        }*/\r\n    /**\r\n     * This function is used to sort element's JSON config properties, so that\r\n     * some properties that absolutely need to be processed last, can be put at\r\n     * the end.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param a  Element 1\r\n     * @param b  Element 2\r\n     * @return Sorting number\r\n     */\r\n    Series.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        // Must come last\r\n        else if (a == \"heatRules\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"heatRules\") {\r\n            return -1;\r\n        }\r\n        else {\r\n            return _super.prototype.configOrder.call(this, a, b);\r\n        }\r\n    };\r\n    /**\r\n     * Sets `visibility` property:\r\n     *\r\n     * * `true` - visible\r\n     * * `false` - hidden\r\n     *\r\n     * @param value  true - visible, false - hidden\r\n     * @return Current visibility\r\n     */\r\n    Series.prototype.setVisibility = function (value) {\r\n        _super.prototype.setVisibility.call(this, value);\r\n        this.bulletsContainer.visible = value;\r\n    };\r\n    return Series;\r\n}(Component));\r\nexport { Series };\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Series\"] = Series;\r\nregistry.registeredClasses[\"SeriesDataItem\"] = SeriesDataItem;\r\n", "/**\r\n * Serial chart module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, ChartDataItem } from \"../Chart\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[SerialChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar SerialChartDataItem = /** @class */ (function (_super) {\r\n    __extends(SerialChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SerialChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SerialChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return SerialChartDataItem;\r\n}(ChartDataItem));\r\nexport { SerialChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all series-based charts, like XY, Pie, etc.\r\n *\r\n * Is not useful on its own.\r\n *\r\n * @see {@link ISerialChartEvents} for a list of available Events\r\n * @see {@link ISerialChartAdapters} for a list of available Adapters\r\n */\r\nvar SerialChart = /** @class */ (function (_super) {\r\n    __extends(SerialChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SerialChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this._exitDP = {};\r\n        _this.className = \"SerialChart\";\r\n        _this.colors = new ColorSet();\r\n        _this._usesData = false;\r\n        // Create a container for series\r\n        var seriesContainer = _this.chartContainer.createChild(Container);\r\n        seriesContainer.shouldClone = false;\r\n        seriesContainer.width = percent(100);\r\n        seriesContainer.height = percent(100);\r\n        seriesContainer.isMeasured = false;\r\n        seriesContainer.layout = \"none\";\r\n        seriesContainer.zIndex = 2;\r\n        _this.seriesContainer = seriesContainer;\r\n        // Create a container for bullets\r\n        var bulletsContainer = _this.chartContainer.createChild(Container);\r\n        bulletsContainer.shouldClone = false;\r\n        bulletsContainer.width = percent(100);\r\n        bulletsContainer.height = percent(100);\r\n        bulletsContainer.isMeasured = false;\r\n        bulletsContainer.zIndex = 3;\r\n        bulletsContainer.layout = \"none\";\r\n        _this.bulletsContainer = bulletsContainer;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    SerialChart.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        if (this.colors) {\r\n            this.colors.dispose();\r\n        }\r\n        if (this.patterns) {\r\n            this.patterns.dispose();\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor\r\n     */\r\n    SerialChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Serial chart\");\r\n        }\r\n    };\r\n    Object.defineProperty(SerialChart.prototype, \"series\", {\r\n        /**\r\n         * A list of chart's series.\r\n         *\r\n         * @return Chart's series\r\n         */\r\n        get: function () {\r\n            if (!this._series) {\r\n                this._series = new ListTemplate(this.createSeries());\r\n                this._series.events.on(\"inserted\", this.handleSeriesAdded, this, false);\r\n                this._series.events.on(\"removed\", this.handleSeriesRemoved, this, false);\r\n                this._disposers.push(new ListDisposer(this._series, false));\r\n                this._disposers.push(this._series.template);\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SerialChart.prototype.handleSeriesRemoved = function (event) {\r\n        var series = event.oldValue;\r\n        this.dataUsers.removeValue(series);\r\n        this.dataUsers.each(function (dataUser) {\r\n            dataUser.invalidateDataItems();\r\n        });\r\n        if (this._exitDP[series.uid]) {\r\n            this._exitDP[series.uid].dispose();\r\n            delete this._exitDP[series.uid];\r\n        }\r\n        if (series.autoDispose) {\r\n            series.dispose();\r\n        }\r\n        else {\r\n            series.parent = undefined;\r\n            series.bulletsContainer.parent = undefined;\r\n        }\r\n        //this.feedLegend();\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var dataItems = this.legend.dataItems;\r\n            for (var i = dataItems.length - 1; i >= 0; i--) {\r\n                var dataItem = dataItems.getIndex(i);\r\n                if (dataItem && dataItem.dataContext == series) {\r\n                    legend.dataItems.remove(dataItem);\r\n                }\r\n            }\r\n            for (var i = legend.data.length - 1; i >= 0; i--) {\r\n                var di = legend.data[i];\r\n                if (di && di == series) {\r\n                    $array.remove(legend.data, di);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Decorates a new [[Series]] object with required parameters when it is\r\n     * added to the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    SerialChart.prototype.handleSeriesAdded = function (event) {\r\n        var _this = this;\r\n        var series = event.newValue;\r\n        if (series.isDisposed()) {\r\n            return;\r\n        }\r\n        series.chart = this;\r\n        series.parent = this.seriesContainer;\r\n        series.bulletsContainer.parent = this.bulletsContainer;\r\n        this._dataUsers.moveValue(series);\r\n        series.addDisposer(new Disposer(function () {\r\n            _this.dataUsers.removeValue(series);\r\n        }));\r\n        this.handleSeriesAdded2(series);\r\n        this.handleLegendSeriesAdded(series);\r\n    };\r\n    SerialChart.prototype.handleLegendSeriesAdded = function (series) {\r\n        if (!series.hiddenInLegend) {\r\n            if (this.legend) {\r\n                this.legend.addData(series);\r\n            }\r\n        }\r\n    };\r\n    SerialChart.prototype.handleSeriesAdded2 = function (series) {\r\n        var _this = this;\r\n        if (!this.dataInvalid) {\r\n            this._exitDP[series.uid] = registry.events.once(\"exitframe\", function () {\r\n                if (!series.data || series.data.length == 0) {\r\n                    series.data = _this.data;\r\n                    if (series.showOnInit) {\r\n                        series.reinit();\r\n                        series.setPropertyValue(\"showOnInit\", false);\r\n                        series.showOnInit = true;\r\n                    }\r\n                    if (!series.isDisposed()) {\r\n                        series.events.once(\"datavalidated\", function () {\r\n                            if (series.data == _this.data) {\r\n                                series._data = [];\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            this._disposers.push(this._exitDP[series.uid]);\r\n        }\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     * @ignore\r\n     */\r\n    SerialChart.prototype.feedLegend = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var legendData_1 = [];\r\n            $iter.each(this.series.iterator(), function (series) {\r\n                if (!series.hiddenInLegend) {\r\n                    legendData_1.push(series);\r\n                }\r\n            });\r\n            legend.dataFields.name = \"name\";\r\n            legend.data = legendData_1;\r\n        }\r\n    };\r\n    /**\r\n     * Creates and returns a new Series, suitable for this chart type.\r\n     *\r\n     * @return New series\r\n     */\r\n    SerialChart.prototype.createSeries = function () {\r\n        return new Series();\r\n    };\r\n    Object.defineProperty(SerialChart.prototype, \"colors\", {\r\n        /**\r\n         * @return Color list\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"colors\");\r\n        },\r\n        /**\r\n         * Chart's color list.\r\n         *\r\n         * This list can be used by a number of serial items, like applying a new\r\n         * color for each Series added. Or, applying a new color for each slice\r\n         * of a Pie chart.\r\n         *\r\n         * Please see [[ColorSet]] for information on how you can set up to generate\r\n         * unique colors.\r\n         *\r\n         * A theme you are using may override default pre-defined colors.\r\n         *\r\n         * @param value Color list\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"colors\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SerialChart.prototype, \"patterns\", {\r\n        /**\r\n         * @return Pattern set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"patterns\");\r\n        },\r\n        /**\r\n         * A [[PatternSet]] to use when creating patterned fills for slices.\r\n         *\r\n         * @since 4.7.5\r\n         * @param value  Pattern set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"patterns\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all parameters from another [[SerialChart]].\r\n     *\r\n     * @param source Source SerialChart\r\n     */\r\n    SerialChart.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.series.copyFrom(source.series);\r\n    };\r\n    /**\r\n     * Hides the chart instantly and then shows it. If defaultState.transitionDuration > 0, this will result an animation in which properties of hidden state will animate to properties of visible state.\r\n     */\r\n    SerialChart.prototype.appear = function () {\r\n        _super.prototype.appear.call(this);\r\n        this.series.each(function (series) {\r\n            if (series.showOnInit && series.inited) {\r\n                series.appear();\r\n            }\r\n        });\r\n    };\r\n    return SerialChart;\r\n}(Chart));\r\nexport { SerialChart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SerialChart\"] = SerialChart;\r\n", "/**\r\n * Module that defines everything related to building ForceDirectedNodes.\r\n *\r\n * It is a container which has ForceDirectedNode element which is a RoundedRectangle.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates [[ForceDirectedNode]] elements (circles).\r\n *\r\n * @see {@link IForceDirectedNodeEvents} for a list of available events\r\n * @see {@link IForceDirectedNodeAdapters} for a list of available Adapters\r\n * @since 4.3.8\r\n * @important\r\n */\r\nvar ForceDirectedNode = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedNode, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedNode() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ForceDirectedNode\";\r\n        //this.isMeasured = true; // for correct position of the tooltip\r\n        _this.applyOnClones = true;\r\n        _this.togglable = true;\r\n        _this.draggable = true;\r\n        _this.setStateOnChildren = true;\r\n        _this.isActive = false;\r\n        _this.expandAll = true;\r\n        _this.paddingRadius = 0;\r\n        _this.linksWith = new Dictionary();\r\n        _this._disposers.push(new DictionaryDisposer(_this.linksWith));\r\n        _this.events.on(\"dragstart\", function () {\r\n            if (_this.dataItem.component) {\r\n                _this.dataItem.component.nodeDragStarted();\r\n            }\r\n        }, _this, false);\r\n        _this.events.on(\"drag\", function () {\r\n            _this.updateSimulation();\r\n        }, _this, false);\r\n        var outerCircle = _this.createChild(Circle);\r\n        outerCircle.shouldClone = false;\r\n        outerCircle.strokeWidth = 2;\r\n        outerCircle.nonScalingStroke = true;\r\n        var bgColor = new InterfaceColorSet().getFor(\"background\");\r\n        outerCircle.fill = bgColor;\r\n        _this.outerCircle = outerCircle;\r\n        var hoverState = outerCircle.states.create(\"hover\");\r\n        hoverState.properties.scale = 1.1;\r\n        var outerActiveState = outerCircle.states.create(\"active\");\r\n        outerActiveState.properties.scale = 1.1;\r\n        outerActiveState.properties.visible = true;\r\n        var activeHoverState = outerCircle.states.create(\"hoverActive\");\r\n        activeHoverState.properties.scale = 1;\r\n        var circle = _this.createChild(Circle);\r\n        var activeState = circle.states.create(\"active\");\r\n        activeState.properties.visible = true;\r\n        circle.shouldClone = false;\r\n        circle.interactionsEnabled = false;\r\n        circle.hiddenState.properties.radius = 0.01;\r\n        circle.events.on(\"validated\", _this.updateSimulation, _this, false);\r\n        circle.hiddenState.properties.visible = true;\r\n        _this.circle = circle;\r\n        _this.addDisposer(circle.events.on(\"validated\", _this.updateLabelSize, _this, false));\r\n        _this._disposers.push(_this.circle);\r\n        var label = _this.createChild(Label);\r\n        label.shouldClone = false;\r\n        label.horizontalCenter = \"middle\";\r\n        label.verticalCenter = \"middle\";\r\n        label.fill = bgColor;\r\n        label.strokeOpacity = 0;\r\n        label.interactionsEnabled = false;\r\n        label.textAlign = \"middle\";\r\n        label.textValign = \"middle\";\r\n        label.nonScaling = true;\r\n        _this.label = label;\r\n        _this.adapter.add(\"tooltipY\", function (y, target) {\r\n            return -target.circle.pixelRadius;\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedNode.prototype.updateLabelSize = function () {\r\n        if (this.label.text) {\r\n            var circle = this.circle;\r\n            var radius = circle.pixelRadius;\r\n            var ds = circle.defaultState;\r\n            var dsRadius = ds.properties.radius;\r\n            if ($type.isNumber(dsRadius)) {\r\n                radius = dsRadius;\r\n            }\r\n            var scale = 1;\r\n            if (this.parent && this.parent.parent) {\r\n                scale = this.parent.parent.scale;\r\n            }\r\n            this.label.width = 2 * radius * scale;\r\n            this.label.height = 2 * radius * scale;\r\n        }\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[ForceDirectedNode]].\r\n     *\r\n     * @param source Source ForceDirectedNode\r\n     */\r\n    ForceDirectedNode.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.circle) {\r\n            this.circle.copyFrom(source.circle);\r\n        }\r\n        if (this.label) {\r\n            this.label.copyFrom(source.label);\r\n        }\r\n        if (this.outerCircle) {\r\n            this.outerCircle.copyFrom(source.outerCircle);\r\n        }\r\n    };\r\n    /**\r\n     * Sets node as \"active\" (expanded).\r\n     *\r\n     * @ignore\r\n     * @param  value  Active or not?\r\n     */\r\n    ForceDirectedNode.prototype.setActive = function (value) {\r\n        var _this = this;\r\n        _super.prototype.setActive.call(this, value);\r\n        var dataItem = this.dataItem;\r\n        if (dataItem) {\r\n            var children = dataItem.children;\r\n            var component = dataItem.component;\r\n            if (!component.dataItemsInvalid) {\r\n                if (value && children && !dataItem.childrenInited) {\r\n                    component.initNode(dataItem);\r\n                    component.updateNodeList();\r\n                }\r\n                if (value) {\r\n                    this.show();\r\n                    if (children) {\r\n                        children.each(function (child) {\r\n                            child.node.show();\r\n                            child.node.interactionsEnabled = true;\r\n                            if (child.parentLink) {\r\n                                child.parentLink.show();\r\n                            }\r\n                            if (_this.expandAll) {\r\n                                child.node.isActive = true;\r\n                            }\r\n                            else {\r\n                                child.node.isActive = false;\r\n                                //child.node.hide(0)\r\n                            }\r\n                        });\r\n                    }\r\n                    dataItem.dispatchVisibility(true);\r\n                }\r\n                else {\r\n                    if (children) {\r\n                        children.each(function (child) {\r\n                            if (child.parentLink) {\r\n                                child.parentLink.hide();\r\n                            }\r\n                            child.node.isActive = false;\r\n                            child.node.interactionsEnabled = false;\r\n                            child.node.hide();\r\n                        });\r\n                    }\r\n                    dataItem.dispatchVisibility(false);\r\n                }\r\n            }\r\n        }\r\n        this.updateSimulation();\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedNode.prototype.updateSimulation = function () {\r\n        var dataItem = this.dataItem;\r\n        if (dataItem && dataItem.component) {\r\n            dataItem.component.restartSimulation();\r\n        }\r\n    };\r\n    Object.defineProperty(ForceDirectedNode.prototype, \"expandAll\", {\r\n        /**\r\n         * @return Expand all?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"expandAll\");\r\n        },\r\n        /**\r\n         * If set to `true` (default) toggling a node on will automatically expand\r\n         * all nodes across the whole tree (all levels) of its descendants.\r\n         *\r\n         * Setting to `false` will only expand immediate children (one level).\r\n         *\r\n         * @default true\r\n         * @since 4.4.8\r\n         * @param  value  Expand all?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"expandAll\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new link between two nodes.\r\n     *\r\n     * Use this method to dynamically add links without requiring to revalidate\r\n     * whole of the data.\r\n     *\r\n     * @since 4.4.8\r\n     * @param   node      Target node\r\n     * @param   strength  Link strength\r\n     * @return            New link\r\n     */\r\n    ForceDirectedNode.prototype.linkWith = function (node, strength) {\r\n        var link = this.linksWith.getKey(node.uid);\r\n        if (!link) {\r\n            link = node.linksWith.getKey(this.uid);\r\n        }\r\n        if (!link) {\r\n            var dataItem = this.dataItem;\r\n            var component = dataItem.component;\r\n            link = component.links.create();\r\n            link.parent = component;\r\n            link.zIndex = -1;\r\n            link.source = this;\r\n            link.target = node;\r\n            link.stroke = dataItem.node.fill;\r\n            link.dataItem = node.dataItem;\r\n            if ($type.isNumber(strength)) {\r\n                link.strength = strength;\r\n            }\r\n            var nodeIndex = component.nodes.indexOf(dataItem.node);\r\n            var childIndex = component.nodes.indexOf(node);\r\n            node.dataItem.childLinks.push(link);\r\n            node.linksWith.setKey(this.uid, link);\r\n            component.forceLinks.push({ source: nodeIndex, target: childIndex });\r\n            component.updateNodeList();\r\n            dataItem.childLinks.push(link);\r\n            this.linksWith.setKey(node.uid, link);\r\n        }\r\n        return link;\r\n    };\r\n    /**\r\n     * Removes a link between two nodes.\r\n     *\r\n     * @since 4.4.8\r\n     * @param  node  Target node\r\n     */\r\n    ForceDirectedNode.prototype.unlinkWith = function (node) {\r\n        this.linksWith.removeKey(node.uid);\r\n    };\r\n    Object.defineProperty(ForceDirectedNode.prototype, \"paddingRadius\", {\r\n        /**\r\n         * @return Padding radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"paddingRadius\");\r\n        },\r\n        /**\r\n         * Padding of the nodes, in pixels.\r\n         *\r\n         * @since 4.6.7\r\n         * @default 0\r\n         * @param  value  padding radius\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"paddingRadius\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ForceDirectedNode;\r\n}(Container));\r\nexport { ForceDirectedNode };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedNode\"] = ForceDirectedNode;\r\n", "export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n", "export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n", "export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n", "export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n", "export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n", "export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n", "export default function() {\n  return this._root;\n}\n", "export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n", "export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n", "export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n", "import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n", "import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n", "var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n", "var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n", "// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n", "import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n", "import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n", "/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { Series, SeriesDataItem } from \"../../charts/series/Series\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ListTemplate, ListDisposer, List } from \"../../core/utils/List\";\r\nimport { ForceDirectedNode } from \"./ForceDirectedNode\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { ForceDirectedLink } from \"./ForceDirectedLink\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport * as d3force from \"d3-force\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ForceDirectedSeries]].\r\n *\r\n * @see {@link DataItem}\r\n * @since 4.3.8\r\n */\r\nvar ForceDirectedSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Have all children already been initialized?\r\n         */\r\n        _this.childrenInited = false;\r\n        _this.className = \"ForceDirectedSeriesDataItem\";\r\n        _this.hasChildren.children = true;\r\n        _this.childLinks = new List();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Shows the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param fields    A list of fields to set values of\r\n     */\r\n    ForceDirectedSeriesDataItem.prototype.show = function (duration, delay, fields) {\r\n        this._visible = true;\r\n        if (this.node) {\r\n            this.node.isActive = true;\r\n        }\r\n        return;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeriesDataItem.prototype.dispatchVisibility = function (visible) {\r\n        if (this.events.isEnabled(\"visibilitychanged\")) {\r\n            var event_1 = {\r\n                type: \"visibilitychanged\",\r\n                target: this,\r\n                visible: visible\r\n            };\r\n            this.events.dispatchImmediately(\"visibilitychanged\", event_1);\r\n        }\r\n    };\r\n    /**\r\n     * Hides the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param toValue   A value to set to `fields` when hiding\r\n     * @param fields    A list of data fields to set value to `toValue`\r\n     */\r\n    ForceDirectedSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        this._visible = false;\r\n        if (this.events.isEnabled(\"visibilitychanged\")) {\r\n            var event_2 = {\r\n                type: \"visibilitychanged\",\r\n                target: this,\r\n                visible: false\r\n            };\r\n            this.events.dispatchImmediately(\"visibilitychanged\", event_2);\r\n        }\r\n        if (this.node) {\r\n            this.node.isActive = false;\r\n        }\r\n        return;\r\n    };\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"value\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            var value = this.values.value.value;\r\n            if (!$type.isNumber(value)) {\r\n                if (this.children) {\r\n                    value = 0;\r\n                    this.children.each(function (child) {\r\n                        value += child.value;\r\n                    });\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        /**\r\n         * Numeric value of the item.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"value\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"node\", {\r\n        /**\r\n         * An element, related to this data item. (node)\r\n         *\r\n         * @readonly\r\n         * @return node element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._node) {\r\n                var component_1 = this.component;\r\n                var node_1 = component_1.nodes.create();\r\n                node_1.draggable = true;\r\n                this._node = node_1;\r\n                this._disposers.push(node_1);\r\n                this._disposers.push(new Disposer(function () {\r\n                    component_1.nodes.removeValue(node_1);\r\n                }));\r\n                this.addSprite(node_1);\r\n                node_1.visible = this.visible;\r\n                node_1.hiddenState.properties.visible = true;\r\n                // Apply accessibility\r\n                if (component_1.itemsFocusable()) {\r\n                    this.component.role = \"menu\";\r\n                    node_1.role = \"menuitem\";\r\n                    node_1.focusable = true;\r\n                }\r\n                else {\r\n                    this.component.role = \"list\";\r\n                    node_1.role = \"listitem\";\r\n                    node_1.focusable = false;\r\n                }\r\n                // Apply screen reader label\r\n                if (node_1.focusable) {\r\n                    node_1.events.once(\"focus\", function (ev) {\r\n                        node_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    node_1.events.once(\"blur\", function (ev) {\r\n                        node_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                if (node_1.hoverable) {\r\n                    node_1.events.once(\"over\", function (ev) {\r\n                        node_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    node_1.events.once(\"out\", function (ev) {\r\n                        node_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n            }\r\n            return this._node;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"level\", {\r\n        /**\r\n         * Depth level in the series hierarchy.\r\n         *\r\n         * The top-level item will have level set at 0. Its children will have\r\n         * level 1, and so on.\r\n         *\r\n         * @readonly\r\n         * @return Level\r\n         */\r\n        get: function () {\r\n            if (!this.parent) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return this.parent.level + 1;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"percent\", {\r\n        /**\r\n         * Percent value of a node.\r\n         *\r\n         * @since 4.9.0\r\n         * @return Percent\r\n         */\r\n        get: function () {\r\n            if (this.parent) {\r\n                return this.value / this.parent.value * 100;\r\n            }\r\n            return 100;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"color\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            var color = this.properties.color;\r\n            if (color == undefined) {\r\n                if (this.parent) {\r\n                    color = this.parent.color;\r\n                }\r\n            }\r\n            if (color == undefined) {\r\n                if (this.component) {\r\n                    color = this.component.colors.getIndex(this.component.colors.step * this.index);\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        /**\r\n         * Item's color.\r\n         *\r\n         * If not set, will use parent's color, or, if that is not set either,\r\n         * automatically assigned color from chart's color set. (`chart.colors`)\r\n         *\r\n         * @param value  : Color | LinearGradient | RadialGradient | Pattern\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"color\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"linkWith\", {\r\n        /**\r\n         * @return Link list\r\n         */\r\n        get: function () {\r\n            return this.properties.linkWith;\r\n        },\r\n        /**\r\n         * An array of id's of other nodes outside of the child/parent tree to link\r\n         * with.\r\n         *\r\n         * @param  value  Link list\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"linkWith\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"hiddenInLegend\", {\r\n        /**\r\n         * @return Hidden in legend?\r\n         */\r\n        get: function () {\r\n            return this.properties.hiddenInLegend;\r\n        },\r\n        /**\r\n         * Should dataItem (node) be hidden in legend?\r\n         *\r\n         * @param value Visible in legend?\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"hiddenInLegend\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"collapsed\", {\r\n        /**\r\n         * @return Collapsed?\r\n         */\r\n        get: function () {\r\n            return this.properties.collapsed;\r\n        },\r\n        /**\r\n         * Indicates whether node should start off as collapsed.\r\n         *\r\n         * This can be used to specify whether node should start off as collapsed\r\n         * via data.\r\n         *\r\n         * To toggle actual node, use its `isActive` property instead.\r\n         *\r\n         * @param  value  Collapsed?\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"collapsed\", value);\r\n            this.node.isActive = !value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"fixed\", {\r\n        /**\r\n         * @return Fixed?\r\n         */\r\n        get: function () {\r\n            return this.properties.fixed;\r\n        },\r\n        /**\r\n         * Is this node fixed (immovable)?\r\n         *\r\n         * @since 4.6.2\r\n         * @param  value  Fixed?\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"fixed\", value);\r\n            if (this.component) {\r\n                this.component.handleFixed(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"children\", {\r\n        /**\r\n         * @return Item's children\r\n         */\r\n        get: function () {\r\n            return this.properties.children;\r\n        },\r\n        /**\r\n         * A list of item's sub-children.\r\n         *\r\n         * @param children  Item's children\r\n         */\r\n        set: function (children) {\r\n            this.setProperty(\"children\", children);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a marker used in the legend for this slice.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Marker container\r\n     */\r\n    ForceDirectedSeriesDataItem.prototype.createLegendMarker = function (marker) {\r\n        this.component.createLegendMarker(marker, this);\r\n        if (!this.node.isActive) {\r\n            this.hide();\r\n        }\r\n    };\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Legend data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * A legend's data item, that corresponds to this data item.\r\n         *\r\n         * @param value  Legend data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            if (value.label) {\r\n                value.label.dataItem = this;\r\n            }\r\n            if (value.valueLabel) {\r\n                value.valueLabel.dataItem = this;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ForceDirectedSeriesDataItem;\r\n}(SeriesDataItem));\r\nexport { ForceDirectedSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a [[ForceDirectedTree]] chart.\r\n *\r\n * @see {@link IForceDirectedSeriesEvents} for a list of available Events\r\n * @see {@link IForceDirectedSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/ForceDirectedTree/} For more information\r\n * @todo Example\r\n * @since 4.3.8\r\n * @important\r\n */\r\nvar ForceDirectedSeries = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this._tick = 0;\r\n        _this.className = \"ForceDirectedSeries\";\r\n        _this.d3forceSimulation = d3force.forceSimulation();\r\n        _this.maxRadius = percent(8);\r\n        _this.minRadius = percent(1);\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.colors = new ColorSet();\r\n        _this.colors.step = 2;\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.manyBodyStrength = -15;\r\n        _this.centerStrength = 0.8;\r\n        _this.showOnTick = 10;\r\n        _this.baseValue = 0;\r\n        _this.setPropertyValue(\"dragFixedNodes\", false);\r\n        _this.setPropertyValue(\"velocityDecay\", 0.4);\r\n        _this.events.on(\"maxsizechanged\", function () {\r\n            _this.updateRadiuses(_this.dataItems);\r\n            _this.updateLinksAndNodes();\r\n            _this.dataItems.each(function (dataItem) {\r\n                _this.handleFixed(dataItem);\r\n            });\r\n            var d3forceSimulation = _this.d3forceSimulation;\r\n            var w = $math.max($math.max(50, _this.innerWidth), _this.innerWidth);\r\n            var h = $math.max($math.max(50, _this.innerHeight), _this.innerHeight);\r\n            if (d3forceSimulation) {\r\n                d3forceSimulation.force(\"x\", d3force.forceX().x(w / 2).strength(_this.centerStrength * 100 / w));\r\n                d3forceSimulation.force(\"y\", d3force.forceY().y(h / 2).strength(_this.centerStrength * 100 / h));\r\n                if (d3forceSimulation.alpha() < 0.4) {\r\n                    d3forceSimulation.alpha(0.4);\r\n                    d3forceSimulation.restart();\r\n                }\r\n            }\r\n        });\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns maximum value from all supplied data items.\r\n     *\r\n     * @ignore\r\n     * @param   dataItems  List of data items\r\n     * @param   max        Default max\r\n     * @return             Max\r\n     */\r\n    ForceDirectedSeries.prototype.getMaxValue = function (dataItems, max) {\r\n        var _this = this;\r\n        dataItems.each(function (dataItem) {\r\n            if (dataItem.value > max) {\r\n                max = dataItem.value;\r\n            }\r\n            if (dataItem.children) {\r\n                var cmax = _this.getMaxValue(dataItem.children, max);\r\n                if (cmax > max) {\r\n                    max = cmax;\r\n                }\r\n            }\r\n        });\r\n        return max;\r\n    };\r\n    /**\r\n     * Returns maximum value from all supplied data items.\r\n     *\r\n     * @ignore\r\n     * @param   dataItems  List of data items\r\n     * @param   max        Default max\r\n     * @return             Max\r\n     */\r\n    ForceDirectedSeries.prototype.getMinValue = function (dataItems, min) {\r\n        var _this = this;\r\n        dataItems.each(function (dataItem) {\r\n            if (dataItem.value < min) {\r\n                min = dataItem.value;\r\n            }\r\n            if (dataItem.children) {\r\n                var cmin = _this.getMaxValue(dataItem.children, min);\r\n                if (cmin < min) {\r\n                    min = cmin;\r\n                }\r\n            }\r\n        });\r\n        return min;\r\n    };\r\n    /**\r\n     * Validates (processes) data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ForceDirectedSeries.prototype.validateDataItems = function () {\r\n        var _this = this;\r\n        if (this.chart.__disabled) {\r\n            _super.prototype.validateDataItems.call(this);\r\n            return;\r\n        }\r\n        this._dataDisposers.push(new ListDisposer(this.links));\r\n        this._maxValue = this.getMaxValue(this.dataItems, 0);\r\n        this._minValue = this.getMinValue(this.dataItems, this._maxValue);\r\n        this.forceLinks = [];\r\n        this.colors.reset();\r\n        var index = 0;\r\n        var radius = Math.min(this.innerHeight / 3, this.innerWidth / 3);\r\n        if (this.dataItems.length <= 1) {\r\n            radius = 0;\r\n        }\r\n        this.dataItems.each(function (dataItem) {\r\n            var angle = index / _this.dataItems.length * 360;\r\n            var node = dataItem.node;\r\n            var xField = node.propertyFields.x;\r\n            var yField = node.propertyFields.y;\r\n            if (xField && $type.hasValue(dataItem.dataContext[xField])) {\r\n                node.x = dataItem.dataContext[xField];\r\n            }\r\n            else {\r\n                node.x = _this.innerWidth / 2 + radius * $math.cos(angle);\r\n            }\r\n            if (yField && $type.hasValue(dataItem.dataContext[yField])) {\r\n                node.y = dataItem.dataContext[yField];\r\n            }\r\n            else {\r\n                node.y = _this.innerHeight / 2 + radius * $math.sin(angle);\r\n            }\r\n            dataItem.node.fill = dataItem.color;\r\n            dataItem.node.stroke = dataItem.color;\r\n            index++;\r\n            _this.initNode(dataItem);\r\n        });\r\n        if (this.dataFields.linkWith) {\r\n            this.dataItems.each(function (dataItem) {\r\n                _this.processLinkWith(dataItem);\r\n            });\r\n        }\r\n        var d3forceSimulation = this.d3forceSimulation;\r\n        d3forceSimulation.on(\"tick\", function () {\r\n            _this.updateLinksAndNodes();\r\n        });\r\n        // helps to avoid initial scatter\r\n        for (var i = 0; i < 10; i++) {\r\n            //d3forceSimulation.tick();\r\n        }\r\n        d3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / 600));\r\n        this.chart.feedLegend();\r\n        _super.prototype.validateDataItems.call(this);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.handleFixed = function (dataItem) {\r\n        var _this = this;\r\n        var node = dataItem.node;\r\n        var xField = node.propertyFields.x;\r\n        var yField = node.propertyFields.y;\r\n        if (xField && $type.hasValue(dataItem.dataContext[xField])) {\r\n            node.x = dataItem.dataContext[xField];\r\n        }\r\n        if (yField && $type.hasValue(dataItem.dataContext[yField])) {\r\n            node.y = dataItem.dataContext[yField];\r\n        }\r\n        if (dataItem.fixed) {\r\n            if (node.x instanceof Percent) {\r\n                node.fx = $utils.relativeToValue(node.x, this.innerWidth);\r\n            }\r\n            else {\r\n                node.fx = node.x;\r\n            }\r\n            if (node.y instanceof Percent) {\r\n                node.fy = $utils.relativeToValue(node.y, this.innerHeight);\r\n            }\r\n            else {\r\n                node.fy = node.y;\r\n            }\r\n            node.draggable = this.dragFixedNodes;\r\n            node.validate(); // for links to redraw\r\n        }\r\n        else {\r\n            node.fx = undefined;\r\n            node.fy = undefined;\r\n            node.draggable = true;\r\n        }\r\n        if (dataItem && dataItem.children) {\r\n            dataItem.children.each(function (di) {\r\n                _this.handleFixed(di);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.updateNodeList = function () {\r\n        var d3forceSimulation = this.d3forceSimulation;\r\n        d3forceSimulation.nodes(this.nodes.values);\r\n        this._linkForce = d3force.forceLink(this.forceLinks);\r\n        d3forceSimulation.force(\"link\", this._linkForce);\r\n        this._collisionForce = d3force.forceCollide();\r\n        d3forceSimulation.force(\"collision\", this._collisionForce);\r\n        var w = $math.max(50, this.innerWidth);\r\n        var h = $math.max(50, this.innerHeight);\r\n        d3forceSimulation.force(\"x\", d3force.forceX().x(w / 2).strength(this.centerStrength * 100 / w));\r\n        d3forceSimulation.force(\"y\", d3force.forceY().y(h / 2).strength(this.centerStrength * 100 / h));\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.updateLinksAndNodes = function () {\r\n        var _this = this;\r\n        if (this._tick < this.showOnTick) {\r\n            this._tick++;\r\n            this.opacity = 0;\r\n        }\r\n        else if (this._tick == this.showOnTick) {\r\n            this.opacity = 1;\r\n            this._tick++;\r\n        }\r\n        if (this._linkForce) {\r\n            this._linkForce.distance(function (linkDatum) {\r\n                return _this.getDistance(linkDatum);\r\n            });\r\n            this._linkForce.strength(function (linkDatum) {\r\n                return _this.getStrength(linkDatum);\r\n            });\r\n        }\r\n        if (this._collisionForce) {\r\n            this._collisionForce.radius(function (node) {\r\n                if (node instanceof ForceDirectedNode) {\r\n                    var radius = node.circle.pixelRadius;\r\n                    if (!node.outerCircle.__disabled && !node.outerCircle.disabled && node.outerCircle.visible) {\r\n                        radius = (radius + 3) * node.outerCircle.scale;\r\n                    }\r\n                    return radius + node.paddingRadius;\r\n                }\r\n                return 1;\r\n            });\r\n        }\r\n        this.d3forceSimulation.force(\"manybody\", d3force.forceManyBody().strength(function (node) {\r\n            if (node instanceof ForceDirectedNode) {\r\n                return node.circle.pixelRadius * _this.manyBodyStrength;\r\n            }\r\n            return _this.manyBodyStrength;\r\n        }));\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.getDistance = function (linkDatum) {\r\n        var source = linkDatum.source;\r\n        var target = linkDatum.target;\r\n        var distance = 0;\r\n        if (target.dataItem && source.dataItem) {\r\n            var link = source.linksWith.getKey(target.uid);\r\n            if (link) {\r\n                distance = link.distance;\r\n            }\r\n            if (!source.isActive) {\r\n                distance = 1;\r\n            }\r\n            if (target.isHidden) {\r\n                return 0;\r\n            }\r\n            return (distance * (source.circle.pixelRadius + target.circle.pixelRadius));\r\n        }\r\n        return distance;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.getStrength = function (linkDatum) {\r\n        var source = linkDatum.source;\r\n        var target = linkDatum.target;\r\n        var strength = 0;\r\n        var link = source.linksWith.getKey(target.uid);\r\n        if (link) {\r\n            strength = link.strength;\r\n        }\r\n        if (target.isHidden) {\r\n            return 0;\r\n        }\r\n        return strength;\r\n    };\r\n    /**\r\n     * Handler for drag end event.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.nodeDragEnded = function () {\r\n        this.d3forceSimulation.alphaTarget(0);\r\n    };\r\n    /**\r\n     * Handler for drag start event.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.nodeDragStarted = function () {\r\n        this.d3forceSimulation.alpha(0.1);\r\n        this.d3forceSimulation.restart();\r\n    };\r\n    /**\r\n     * Resets positions of whole tree.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.restartSimulation = function () {\r\n        if (this.d3forceSimulation.alpha() <= 0.3) {\r\n            this.d3forceSimulation.alpha(0.3);\r\n            this.d3forceSimulation.restart();\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.updateRadiuses = function (dataItems) {\r\n        var _this = this;\r\n        dataItems.each(function (dataItem) {\r\n            _this.updateRadius(dataItem);\r\n            if (dataItem.childrenInited) {\r\n                _this.updateRadiuses(dataItem.children);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.updateRadius = function (dataItem) {\r\n        var node = dataItem.node;\r\n        var minSide = (this.innerWidth + this.innerHeight) / 2;\r\n        var minRadius = $utils.relativeToValue(this.minRadius, minSide);\r\n        var maxRadius = $utils.relativeToValue(this.maxRadius, minSide);\r\n        var baseValue = this.baseValue;\r\n        if (baseValue == null) {\r\n            baseValue = this._minValue;\r\n        }\r\n        var radius = minRadius + (dataItem.value - baseValue) / (this._maxValue - baseValue) * (maxRadius - minRadius);\r\n        if (!$type.isNumber(radius)) {\r\n            radius = minRadius;\r\n        }\r\n        //if(!node.circle.isHidden){\r\n        node.circle.radius = radius;\r\n        //}\r\n        node.outerCircle.radius = radius + 3;\r\n        node.circle.states.getKey(\"active\").properties.radius = radius;\r\n        node.circle.defaultState.properties.radius = radius;\r\n    };\r\n    /**\r\n     * Initializes node.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.initNode = function (dataItem) {\r\n        var _this = this;\r\n        var node = dataItem.node;\r\n        node.parent = this;\r\n        this.updateRadius(dataItem);\r\n        //let nodeIndex = this.nodes.indexOf(dataItem.node);\r\n        if (!dataItem.children || dataItem.children.length == 0) {\r\n            node.outerCircle.disabled = true;\r\n            node.circle.interactionsEnabled = true;\r\n            node.cursorOverStyle = MouseCursorStyle.default;\r\n        }\r\n        else {\r\n            node.cursorOverStyle = MouseCursorStyle.pointer;\r\n        }\r\n        if (this.dataItemsInvalid && (dataItem.level >= this.maxLevels - 1 || dataItem.collapsed)) {\r\n            node.isActive = false;\r\n            this.updateNodeList();\r\n            return;\r\n        }\r\n        if (!node.isActive) {\r\n            node.hide(0);\r\n        }\r\n        this.handleFixed(dataItem);\r\n        if (dataItem.children) {\r\n            var index_1 = 0;\r\n            dataItem.childrenInited = true;\r\n            if (this.dataItems.length == 1 && dataItem.level == 0) {\r\n                this.colors.next();\r\n            }\r\n            dataItem.children.each(function (child) {\r\n                /*\r\n                let link = this.links.create();\r\n                link.parent = this;\r\n                link.zIndex = -1;\r\n                dataItem.childLinks.push(link);\r\n                link.source = dataItem.node;\r\n                let childIndex = this.nodes.indexOf(child.node);\r\n                link.target = child.node;\r\n                child.parentLink = link;\r\n\r\n                this._forceLinks.push({ source: nodeIndex, target: childIndex });\r\n                */\r\n                var link = node.linkWith(child.node);\r\n                child.parentLink = link;\r\n                var radius = 2 * node.circle.pixelRadius + child.node.circle.pixelRadius;\r\n                var angle = index_1 / dataItem.children.length * 360;\r\n                child.node.x = node.pixelX + radius * $math.cos(angle);\r\n                child.node.y = node.pixelY + radius * $math.sin(angle);\r\n                child.node.circle.radius = 0;\r\n                var color;\r\n                var diColor = child.properties.color;\r\n                if ($type.hasValue(diColor)) {\r\n                    color = diColor;\r\n                }\r\n                else {\r\n                    if (_this.dataItems.length == 1 && dataItem.level == 0) {\r\n                        color = _this.colors.next();\r\n                    }\r\n                    else {\r\n                        color = dataItem.color;\r\n                    }\r\n                }\r\n                child.color = color;\r\n                child.node.fill = color;\r\n                child.node.stroke = color;\r\n                child.parentLink.stroke = color;\r\n                child.node.fill = child.node.fill;\r\n                child.node.stroke = child.node.stroke;\r\n                _this.initNode(child);\r\n                index_1++;\r\n            });\r\n        }\r\n        node.isActive = true;\r\n        node.show(0);\r\n        this.updateNodeList();\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.processLinkWith = function (dataItem) {\r\n        var _this = this;\r\n        if (dataItem.linkWith) {\r\n            $array.each(dataItem.linkWith, function (id, index) {\r\n                var dataItemToConnect = _this.getDataItemById(_this.dataItems, id);\r\n                if (dataItemToConnect) {\r\n                    dataItem.node.linkWith(dataItemToConnect.node, _this.linkWithStrength);\r\n                }\r\n            });\r\n        }\r\n        if (dataItem.children) {\r\n            dataItem.children.each(function (child) {\r\n                _this.processLinkWith(child);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns a [[ForceDirectedSeriesDataItem]] related to node by specific id.\r\n     *\r\n     * @param   dataItems  List of data items to search in\r\n     * @param   id         Id to search for\r\n     * @return             Data item\r\n     */\r\n    ForceDirectedSeries.prototype.getDataItemById = function (dataItems, id) {\r\n        for (var i = dataItems.length - 1; i >= 0; i--) {\r\n            var dataItem = dataItems.getIndex(i);\r\n            if (dataItem.id == id) {\r\n                return dataItem;\r\n            }\r\n            if (dataItem.children) {\r\n                var di = this.getDataItemById(dataItem.children, id);\r\n                if (di) {\r\n                    return di;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    ForceDirectedSeries.prototype.createDataItem = function () {\r\n        return new ForceDirectedSeriesDataItem();\r\n    };\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"nodes\", {\r\n        /**\r\n         * A list of nodes in series.\r\n         *\r\n         * @return  Node list\r\n         */\r\n        get: function () {\r\n            if (!this._nodes) {\r\n                var node = this.createNode();\r\n                node.applyOnClones = true;\r\n                this._disposers.push(node);\r\n                this._nodes = new ListTemplate(node);\r\n                this._disposers.push(new ListDisposer(this._nodes));\r\n            }\r\n            return this._nodes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"links\", {\r\n        /**\r\n         * A list of links between nodes.\r\n         *\r\n         * @return  Link list\r\n         */\r\n        get: function () {\r\n            if (!this._links) {\r\n                var link = this.createLink();\r\n                link.applyOnClones = true;\r\n                this._disposers.push(link);\r\n                this._links = new ListTemplate(link);\r\n                this._disposers.push(new ListDisposer(this._links));\r\n            }\r\n            return this._links;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new node.\r\n     */\r\n    ForceDirectedSeries.prototype.createNode = function () {\r\n        return new ForceDirectedNode();\r\n    };\r\n    /**\r\n     * Creates a new link.\r\n     */\r\n    ForceDirectedSeries.prototype.createLink = function () {\r\n        return new ForceDirectedLink();\r\n    };\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"minRadius\", {\r\n        /**\r\n         * @return Minimum radius (px or percent)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minRadius\");\r\n        },\r\n        /**\r\n         * Smallest possible radius in pixels of the node circle.\r\n         *\r\n         * If set in percent, it radius will be calculated from average width and\r\n         * height of series.\r\n         *\r\n         * @default Percent(1)\r\n         * @param  value  Minimum radius (px or percent)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minRadius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"baseValue\", {\r\n        /**\r\n         * @return Minimum value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"baseValue\");\r\n        },\r\n        /**\r\n         * Base value. If you set it to null, real minimum value of your data will be used.\r\n         *\r\n         * @default 0\r\n         * @param  value  Minimum value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"baseValue\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"maxRadius\", {\r\n        /**\r\n         * @return Maximum radius (px or Percent)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxRadius\");\r\n        },\r\n        /**\r\n         * Biggest possible radius in pixels of the node circle.\r\n         *\r\n         * If set in percent, it radius will be calculated from average width and\r\n         * height of series.\r\n         *\r\n         * @default Percent(8)\r\n         * @param  value  Maximum radius (px or Percent)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxRadius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"colors\", {\r\n        /**\r\n         * @return Color set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"colors\");\r\n        },\r\n        /**\r\n         * A color set to be used for nodes.\r\n         *\r\n         * iIt works like this:\r\n         *\r\n         * The first level with more than one node, assigns different colors to all\r\n         * nodes in this list. Their child nodes inherit the color.\r\n         *\r\n         * For example, if the top level has one node with three children, the top\r\n         * node will get first color, the first child will get second color, etc.\r\n         *\r\n         * If there are two top nodes, the first top node gets first color, the\r\n         * second top node gets the second color. Their subsequent children inherit\r\n         * colors.\r\n         *\r\n         * @param value  Color set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"colors\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"maxLevels\", {\r\n        /**\r\n         * @return Number of levels\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxLevels\");\r\n        },\r\n        /**\r\n         * Number of levels to be displayed initially.\r\n         *\r\n         * @param  value  Number of levels\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxLevels\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"manyBodyStrength\", {\r\n        /**\r\n         * @return  Body push/attrack strength\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"manyBodyStrength\");\r\n        },\r\n        /**\r\n         * Relative strength each node pushes (or attracts) other nodes (it is\r\n         * multiplied by `node.circle.radius` for big nodes to push stronger).\r\n         *\r\n         * Positive value will make nodes attract each other, while negative will\r\n         * push away each other. The bigger the negative number is, the more\r\n         * scattered nodes will be.\r\n         *\r\n         * Available value range: `-XX` to `XX`.\r\n         *\r\n         * @default -15\r\n         * @param  value  Body push/attrack strength\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"manyBodyStrength\", value)) {\r\n                this.restartSimulation();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"centerStrength\", {\r\n        /**\r\n         * @return  Stregth of attraction to center\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"centerStrength\");\r\n        },\r\n        /**\r\n         * Relative strength each child node is pushes (or attracted) to the center\r\n         * of the chart.\r\n         *\r\n         * Positive value will make nodes to be attracted to center, while negative\r\n         * will push them away.\r\n         *\r\n         * Available value range: `-50` to `50`.\r\n         *\r\n         * @default 0.8\r\n         * @param  value  Stregth of attraction to center\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"centerStrength\", value)) {\r\n                this.restartSimulation();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"linkWithStrength\", {\r\n        /**\r\n         * @return Strength\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"linkWithStrength\");\r\n        },\r\n        /**\r\n         * Relative attraction strength between the nodes connected with `linkWith`.\r\n         *\r\n         * @since 4.4.8\r\n         * @param  value  Strength\r\n         * @default undefined\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"linkWithStrength\", value)) {\r\n                this.restartSimulation();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"velocityDecay\", {\r\n        /**\r\n         * @return Velocity decay\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"velocityDecay\");\r\n        },\r\n        /**\r\n         * The bigger the number the more slowly the nodes will move. Think of it as\r\n         * friction.\r\n         *\r\n         * @since 4.9.2\r\n         * @param  value  Velocity decay\r\n         * @default 0.4\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"velocityDecay\", value)) {\r\n                this.d3forceSimulation.velocityDecay(value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"dragFixedNodes\", {\r\n        /**\r\n         * @return Allow drag fixed nodes?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"dragFixedNodes\");\r\n        },\r\n        /**\r\n         * Specifies if user can drag fixed nodes.\r\n         *\r\n         * @since 4.9.0\r\n         * @default false\r\n         * @param  value  Allow drag fixed nodes?\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            if (this.setPropertyValue(\"dragFixedNodes\", value)) {\r\n                this.dataItems.each(function (dataItem) {\r\n                    _this.handleFixed(dataItem);\r\n                });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Binds related legend data item's visual settings to this series' visual\r\n     * settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker    Container\r\n     * @param dataItem  Data item\r\n     */\r\n    ForceDirectedSeries.prototype.createLegendMarker = function (marker, dataItem) {\r\n        marker.children.each(function (child) {\r\n            var node = dataItem.node;\r\n            if (child instanceof RoundedRectangle) {\r\n                child.cornerRadius(40, 40, 40, 40);\r\n            }\r\n            child.defaultState.properties.fill = node.fill;\r\n            child.defaultState.properties.stroke = node.stroke;\r\n            child.defaultState.properties.fillOpacity = node.fillOpacity;\r\n            child.defaultState.properties.strokeOpacity = node.strokeOpacity;\r\n            child.fill = node.fill;\r\n            child.stroke = node.stroke;\r\n            child.fillOpacity = node.fillOpacity;\r\n            child.strokeOpacity = node.strokeOpacity;\r\n            if (child.fill == undefined) {\r\n                child.__disabled = true;\r\n            }\r\n            var legendDataItem = marker.dataItem;\r\n            legendDataItem.color = node.fill;\r\n            legendDataItem.colorOrig = node.fill;\r\n            node.events.on(\"propertychanged\", function (ev) {\r\n                if (ev.property == \"fill\") {\r\n                    child.__disabled = false;\r\n                    if (!child.isActive) {\r\n                        child.fill = node.fill;\r\n                    }\r\n                    child.defaultState.properties.fill = node.fill;\r\n                    legendDataItem.color = node.fill;\r\n                    legendDataItem.colorOrig = node.fill;\r\n                }\r\n                if (ev.property == \"stroke\") {\r\n                    if (!child.isActive) {\r\n                        child.stroke = node.stroke;\r\n                    }\r\n                    child.defaultState.properties.stroke = node.stroke;\r\n                }\r\n            }, undefined, false);\r\n        });\r\n    };\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"showOnTick\", {\r\n        /**\r\n         * @return Number of ticks to delay rendering\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"showOnTick\");\r\n        },\r\n        /**\r\n         * Renders series hidden until Xth tick.\r\n         *\r\n         * @default 10\r\n         * @since 4.10.17\r\n         * @param value Number of ticks to delay rendering\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"showOnTick\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ForceDirectedSeries;\r\n}(Series));\r\nexport { ForceDirectedSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedSeries\"] = ForceDirectedSeries;\r\nregistry.registeredClasses[\"ForceDirectedSeriesDataItem\"] = ForceDirectedSeriesDataItem;\r\n", "/**\r\n * ForceDirectedTree chart module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, SerialChartDataItem } from \"../../charts/types/SerialChart\";\r\nimport { ForceDirectedSeries } from \"./ForceDirectedSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport { ZoomOutButton } from \"../../core/elements/ZoomOutButton\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n * @see {@link DataItem}\r\n */\r\nvar ForceDirectedTreeDataItem = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedTreeDataItem, _super);\r\n    function ForceDirectedTreeDataItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ForceDirectedTreeDataItem;\r\n}(SerialChartDataItem));\r\nexport { ForceDirectedTreeDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A main class for [[ForceDirectedTree]] chart type.\r\n *\r\n * @see {@link IForceDirectedTreeEvents} for a list of available Events\r\n * @see {@link IForceDirectedTreeAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/force-directed/} For more information\r\n * @since 4.3.8\r\n * @important\r\n */\r\nvar ForceDirectedTree = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedTree, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedTree() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Default duration of zoom animations (ms).\r\n         */\r\n        _this.zoomDuration = 1000;\r\n        /**\r\n         * Default zooming animation easing function.\r\n         */\r\n        _this.zoomEasing = $ease.cubicOut;\r\n        /**\r\n         * Smallest available zoom level. The chart will not allow to zoom out past\r\n         * this setting.\r\n         *\r\n         * NOTE: Should be power of 2.\r\n         *\r\n         * @default 1\r\n         */\r\n        _this.minZoomLevel = 1;\r\n        /**\r\n         * Biggest available zoom level. The chart will not allow to zoom in past\r\n         * this setting.\r\n         *\r\n         * NOTE: Should be power of 2.\r\n         *\r\n         * @default 32\r\n         */\r\n        _this.maxZoomLevel = 16;\r\n        _this.className = \"ForceDirectedTree\";\r\n        _this.seriesContainer.isMeasured = true;\r\n        _this.seriesContainer.layout = \"absolute\";\r\n        _this.mouseWheelBehavior = \"none\";\r\n        _this.zoomStep = 2;\r\n        _this.seriesContainer.background.fillOpacity = 0;\r\n        _this.seriesContainer.background.fill = color(\"#ffffff\");\r\n        var zoomOutButton = _this.createChild(ZoomOutButton);\r\n        zoomOutButton.shouldClone = false;\r\n        zoomOutButton.x = percent(100);\r\n        zoomOutButton.horizontalCenter = \"right\";\r\n        zoomOutButton.valign = \"top\";\r\n        zoomOutButton.zIndex = Number.MAX_SAFE_INTEGER;\r\n        zoomOutButton.marginTop = 5;\r\n        zoomOutButton.marginRight = 5;\r\n        zoomOutButton.isMeasured = false;\r\n        zoomOutButton.adapter.add(\"dx\", function (dx, target) {\r\n            return -zoomOutButton.marginRight;\r\n        });\r\n        zoomOutButton.hide(0);\r\n        _this.zoomOutButton = zoomOutButton;\r\n        _this.addDisposer(_this.seriesContainer.events.on(\"sizechanged\", function () {\r\n            if (_this.seriesContainer.scale != 1) {\r\n                _this.zoomOutButton.show();\r\n            }\r\n            else {\r\n                _this.zoomOutButton.hide();\r\n            }\r\n        }));\r\n        var interaction = getInteraction();\r\n        _this._disposers.push(interaction.body.events.on(\"down\", function (event) {\r\n            if (_this.zoomable) {\r\n                var svgPoint = $utils.documentPointToSvg(event.pointer.point, _this.htmlContainer);\r\n                if (svgPoint.x > 0 && svgPoint.y > 0 && svgPoint.x < _this.svgContainer.width && svgPoint.y < _this.svgContainer.height) {\r\n                    _this.seriesContainer.dragStart(event.pointer);\r\n                }\r\n            }\r\n        }, _this));\r\n        _this._disposers.push(interaction.body.events.on(\"up\", function (event) {\r\n            if (_this.zoomable) {\r\n                _this.seriesContainer.dragStop(event.pointer, true);\r\n            }\r\n        }, _this));\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates and returns a new series of the suitable type.\r\n     *\r\n     * @return New series\r\n     */\r\n    ForceDirectedTree.prototype.createSeries = function () {\r\n        return new ForceDirectedSeries();\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    ForceDirectedTree.prototype.createDataItem = function () {\r\n        return new ForceDirectedTreeDataItem();\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedTree.prototype.feedLegend = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var legendData_1 = [];\r\n            this.series.each(function (series) {\r\n                if (!series.hiddenInLegend) {\r\n                    var dataItems = series.dataItems;\r\n                    if (dataItems.length == 1) {\r\n                        var children = series.dataItems.getIndex(0).children;\r\n                        if (children && children.length > 0) {\r\n                            dataItems = children;\r\n                        }\r\n                    }\r\n                    dataItems.each(function (dataItem) {\r\n                        if (!dataItem.hiddenInLegend) {\r\n                            legendData_1.push(dataItem);\r\n                            var legendSettings = series.legendSettings;\r\n                            if (legendSettings) {\r\n                                if (legendSettings.labelText) {\r\n                                    legend.labels.template.text = legendSettings.labelText;\r\n                                }\r\n                                if (legendSettings.itemLabelText) {\r\n                                    legend.labels.template.text = legendSettings.itemLabelText;\r\n                                }\r\n                                if (legendSettings.valueText) {\r\n                                    legend.valueLabels.template.text = legendSettings.valueText;\r\n                                }\r\n                                if (legendSettings.itemValueText) {\r\n                                    legend.valueLabels.template.text = legendSettings.itemValueText;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            legend.data = legendData_1;\r\n            legend.dataFields.name = \"name\";\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    ForceDirectedTree.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Force directed tree\");\r\n        }\r\n    };\r\n    /**\r\n     * Since this chart uses hierarchical data, we need to remove childrent\r\n     * dataField from export of non-hierarchical formats such as CSV and XSLX.\r\n     *\r\n     * @return Export\r\n     */\r\n    ForceDirectedTree.prototype.getExporting = function () {\r\n        var _this = this;\r\n        var exporting = _super.prototype.getExporting.call(this);\r\n        exporting.adapter.add(\"formatDataFields\", function (info) {\r\n            if (info.format == \"csv\" || info.format == \"xlsx\") {\r\n                _this.series.each(function (series) {\r\n                    if ($type.hasValue(series.dataFields.children)) {\r\n                        delete info.dataFields[series.dataFields.children];\r\n                    }\r\n                });\r\n            }\r\n            return info;\r\n        });\r\n        return exporting;\r\n    };\r\n    /**\r\n     * Handles mouse wheel event, e.g. user rotates mouse wheel while over the\r\n     * map: zooms in or out depending on the direction of the wheel turn.\r\n     *\r\n     * @param event  Original event\r\n     */\r\n    ForceDirectedTree.prototype.handleWheel = function (event) {\r\n        var point = $utils.documentPointToSprite(event.point, this.seriesContainer);\r\n        var zoomLevel = this.seriesContainer.scale;\r\n        if (event.shift.y < 0) {\r\n            zoomLevel *= this.zoomStep;\r\n        }\r\n        else {\r\n            zoomLevel /= this.zoomStep;\r\n        }\r\n        zoomLevel = $math.fitToRange(zoomLevel, this.minZoomLevel, this.maxZoomLevel);\r\n        this.zoomToPoint(point, zoomLevel);\r\n    };\r\n    /**\r\n     * Zooms the chart to particular point.\r\n     *\r\n     * @from 4.10.0\r\n     * @param  point      A point to zoom to\r\n     * @param  zoomLevel  Zoom level\r\n     * @param  center     Should the chart center on the target point?\r\n     */\r\n    ForceDirectedTree.prototype.zoomToPoint = function (point, zoomLevel, center) {\r\n        var container = this.seriesContainer;\r\n        var svgPoint;\r\n        if (center) {\r\n            svgPoint = { x: this.maxWidth / 2, y: this.maxHeight / 2 };\r\n        }\r\n        else {\r\n            svgPoint = $utils.spritePointToSvg(point, container);\r\n        }\r\n        var x = svgPoint.x - point.x * zoomLevel;\r\n        var y = svgPoint.y - point.y * zoomLevel;\r\n        container.animate([{ property: \"scale\", to: zoomLevel }, { property: \"x\", to: x }, { property: \"y\", to: y }], this.zoomDuration, this.zoomEasing);\r\n    };\r\n    /**\r\n     * Zooms the chart to particular data item (node).\r\n     *\r\n     * @from 4.10.0\r\n     * @param  dataItem   A data item to zoom to\r\n     * @param  zoomLevel  Zoom level\r\n     * @param  center     Should the chart center on the target point?\r\n     */\r\n    ForceDirectedTree.prototype.zoomToDataItem = function (dataItem, zoomLevel, center) {\r\n        var x = dataItem.node.pixelX;\r\n        var y = dataItem.node.pixelY;\r\n        if (!$type.isNumber(zoomLevel)) {\r\n            zoomLevel = this.seriesContainer.scale * this.zoomStep;\r\n        }\r\n        this.zoomToPoint({ x: x, y: y }, zoomLevel, center);\r\n    };\r\n    /**\r\n     * Zooms out the chart to initial full view.\r\n     *\r\n     * @from 4.10.0\r\n     */\r\n    ForceDirectedTree.prototype.zoomOut = function () {\r\n        var container = this.seriesContainer;\r\n        this.zoomToPoint({ x: container.pixelWidth / 2, y: container.pixelHeight / 2 }, 1, true);\r\n    };\r\n    Object.defineProperty(ForceDirectedTree.prototype, \"zoomable\", {\r\n        /**\r\n         * @return Zoomable\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"zoomable\");\r\n        },\r\n        /**\r\n         * When user zooms in or out current zoom level is multiplied or divided\r\n         * by value of this setting.\r\n         *\r\n         * @default false\r\n         * @since 4.10.0\r\n         * @see {@link https://www.amcharts.com/docs/v4/chart-types/force-directed/#Zooming} for more information about zooming ForceDirectedTree\r\n         * @param value  Zoomable\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            if (this.setPropertyValue(\"zoomable\", value)) {\r\n                if (value) {\r\n                    this.seriesContainer.resizable = true;\r\n                    this.seriesContainer.draggable = true;\r\n                    this.seriesContainer.dragWhileResize = true;\r\n                    this.mouseWheelBehavior = \"zoom\";\r\n                    this._backgroundZoomoutDisposer = this.seriesContainer.background.events.on(\"hit\", function () {\r\n                        _this.zoomOut();\r\n                    }, this, false);\r\n                    this._disposers.push(this._backgroundZoomoutDisposer);\r\n                    this._disposers.push(this.seriesContainer.events.on(\"sizechanged\", function () {\r\n                        _this.series.each(function (series) {\r\n                            series.nodes.each(function (node) {\r\n                                node.updateLabelSize();\r\n                            });\r\n                        });\r\n                    }));\r\n                }\r\n                else {\r\n                    this.seriesContainer.resizable = false;\r\n                    this.seriesContainer.draggable = false;\r\n                    this.seriesContainer.dragWhileResize = false;\r\n                    this.mouseWheelBehavior = \"none\";\r\n                    if (this._backgroundZoomoutDisposer) {\r\n                        this._backgroundZoomoutDisposer.dispose();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedTree.prototype, \"mouseWheelBehavior\", {\r\n        /**\r\n         * @return Mouse wheel behavior\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"mouseWheelBehavior\");\r\n        },\r\n        /**\r\n         * Specifies what should chart do if when mouse wheel is rotated.\r\n         *\r\n         * @param Mouse wheel behavior\r\n         * @since 4.10.0\r\n         * @default none\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"mouseWheelBehavior\", value)) {\r\n                if (value != \"none\") {\r\n                    this._mouseWheelDisposer = this.chartContainer.events.on(\"wheel\", this.handleWheel, this, false);\r\n                    this._disposers.push(this._mouseWheelDisposer);\r\n                }\r\n                else {\r\n                    if (this._mouseWheelDisposer) {\r\n                        this._mouseWheelDisposer.dispose();\r\n                    }\r\n                    this.chartContainer.wheelable = false;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedTree.prototype, \"zoomStep\", {\r\n        /**\r\n         * @return Zoom factor\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"zoomStep\");\r\n        },\r\n        /**\r\n         * When user zooms in or out current zoom level is multiplied or divided\r\n         * by value of this setting.\r\n         *\r\n         * @since 4.10.0\r\n         * @default 2\r\n         * @param value  Zoom factor\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"zoomStep\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedTree.prototype, \"zoomOutButton\", {\r\n        /**\r\n         * @return Zoom out button\r\n         */\r\n        get: function () {\r\n            return this._zoomOutButton;\r\n        },\r\n        /**\r\n         * A [[Button]] element that is used for zooming out the chart.\r\n         *\r\n         * This button appears only when chart is zoomed in, and disappears\r\n         * autoamatically when it is zoome dout.\r\n         *\r\n         * @param button  Zoom out button\r\n         */\r\n        set: function (button) {\r\n            var _this = this;\r\n            this._zoomOutButton = button;\r\n            if (button) {\r\n                button.events.on(\"hit\", function () {\r\n                    _this.zoomOut();\r\n                }, undefined, false);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ForceDirectedTree;\r\n}(SerialChart));\r\nexport { ForceDirectedTree };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedTree\"] = ForceDirectedTree;\r\nregistry.registeredClasses[\"ForceDirectedTreeDataItem\"] = ForceDirectedTreeDataItem;\r\n"],
  "mappings": "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",
  "names": ["ForceDirectedLink", "x", "x2", "y", "y2", "Grip", "ChartDataItem", "Chart", "each", "Bullet", "LegendDataItem", "LegendSettings", "Legend", "SeriesDataItem", "Series", "each", "i", "percent", "x", "y", "event", "minValue", "maxValue", "min", "max", "a", "SerialChartDataItem", "SerialChart", "each", "ForceDirectedNode", "y", "x", "y", "x", "y", "x", "y", "x2", "y2", "x3", "y3", "x", "y", "x", "y", "x", "x", "y", "x", "y", "m", "i", "c", "now", "x", "y", "x", "y", "node", "strength", "c", "x2", "x_default", "x", "y_default", "y", "ForceDirectedSeriesDataItem", "color", "ForceDirectedSeries", "x_default", "y_default", "max", "min", "index", "color", "ForceDirectedTreeDataItem", "ForceDirectedTree", "x", "y"]
}
